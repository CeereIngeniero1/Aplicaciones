const puppeteer = require('puppeteer');
const fs = require('fs');
const { Console } = require('console');
const { keyboard, mouse, Key, clipboard } = require('@nut-tree-fork/nut-js');
const colors = require('colors');

const os = require('os');
const NombreEquipo = os.hostname();
const EquiposGenerales = {
    'HPGRIS': "EQUIPO CREADOR",
    'DESKTOP-6JICI9S': "ASUS OLD",
    'DESKTOP-SNSPTLM': "DELLC3",
    'LAPTOP-2VU2EBUO': "EQUIPO VALEN",
    'HPRED240': "FER EQUIPO",
    'LAPTOP-JL0BL28F': "JORGE EQUIPO",
    'MERCADEO': "MERCADEO",
    'DESKTOP-RF3NUO3': "PIXEL",
    'HPRED241':"FERCHO ingeniero en sistemas best"
}


const EquipoActual = EquiposGenerales[NombreEquipo];
// Actualizado
var Empresa = 'Collective';
var user1 = '76966';
var pass1 = 'CML2025_Supia';
var user2 = '83949';
var pass2 = '*Jcrmh2022#';
var Agente = 0;
var EnviarCorreosParaPestanas = 0;
var contreapertura = 0;
var ContadorVueltas = 0;
var contComasceldas = 0;
var Cag = false;
var Caggrande = false;
Pagina();
async function Pagina() {
    
    var Pines = fs.readFileSync('Pin.txt', 'utf-8', prueba = (error, datos) => {
        if (error) {
            throw error;
        } else {
            console.log(datos);
        }
    });
    for (let i = 0; i < Pines.length; i++) {
        if (Pines.substring(i + 1, i + 4) == 'Co:') {
            console.log(Pines.substring(i + 1, i + 4));
            Pin = Pines.substring(i + 4, i + 31);
            break
        }
    }



    const pathToExtension = 'C:\\Aplicaciones\\Exte\\0.2.1_0';


    const browser = await puppeteer.launch({
        //executablePath: 'C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe',
        executablePath: "C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe",
        // Reemplaza con la ruta real a tu Google Chrome
        headless: false,
        args: ['--start-maximized',
            `--disable-extensions-except=${pathToExtension}`,
            `--load-extension=${pathToExtension}`
        ],
        devtools: false
    });

        Mineria(browser, Pin);

}




function Mineria(browser,  Pin) {
    (async () => {

        console.log("Esta es la vuelta " + ContadorVueltas);
        const page = await browser.newPage();

        let Primerpaso = setTimeout(() => {
            console.log("ENTRO EN EL PRIMERPASO")

            page.close();
            Mineria(browser,  Pin);

        }, 20000);





        await page.setViewport({ width: 1368, height: 620 });
        await page.goto('https://annamineria.anm.gov.co/sigm/');

        let user = (Agente == 0) ? user1 : user2;
        let pass = (Agente == 0) ? pass1 : pass2;

            try {

                console.log(user);
                console.log(pass);
                await page.type('#username', user);
                await page.type('#password', pass);

                page.click("#loginButton");


            } catch (ex) {
                console.log("Entro en el catch");
            }

        page.setDefaultTimeout(0);
        try {
            await page.waitForNavigation({
                waitUntil: 'networkidle0',
                timeout: 5000 // 5 segundos en milisegundos
            });
        } catch (error) {
            if (error instanceof puppeteer.errors.TimeoutError) {
                console.log('La navegación tardó más de 5 segundos.');
                // Aquí puedes manejar la situación cuando se supera el tiempo de espera
            } else {
                throw error; // Lanzar el error si no es un TimeoutError
            }
        }
        validador = 0;
        clearTimeout(Primerpaso);
        let Segundopaso = setTimeout(() => {
            console.log("ENTRO EN EL Segundopaso")
            page.close();
            Mineria(browser,  Pin);
        }, 35000);





        const solicitudes = await page.$x('//span[contains(.,"Solicitudes")]');
        await solicitudes[1].click();

        const lblRadicar = await page.$x('//a[contains(.,"Radicar solicitud de propuesta de contrato de concesión")]');
        await lblRadicar[0].click();
        if (Agente == 1) {
            await page.waitForTimeout(2000);


            //await page.evaluate(() => document.getElementById("submitterPersonOrganizationNameId").value = "")
            await page.evaluate(() => document.getElementById("submitterPersonOrganizationNameId").value = "");

            //await page.waitForSelector('select[id="submitterPersonOrganizationNameId"]');
            //const Agente = await page.$('select[id=" submitterPersonOrganizationNameId"]');

            await page.type('#submitterPersonOrganizationNameId', '76966');
            //await page.type('#submitterPersonOrganizationNameId', '');

            await page.waitForTimeout(3000);

            await page.keyboard.press("Enter");

            await page.waitForTimeout(550);
        }



        await page.waitForTimeout(2500)
        page.setDefaultTimeout(0);
        await page.waitForSelector('select[id="pinSlctId"]');
        const selectPin = await page.$('select[id="pinSlctId"]');
        await selectPin.type(Pin);
        console.log(Pin);

        /* VALIDAR SI EL PIN ESTÁ PRÓXIMO A VENCERSE */
            // Capturar todas las opciones de un select
            const allOptions = await page.evaluate(select => {
                const options = Array.from(select.options); // Convierte las opciones a un array
                return options.map(option => option.textContent); // Retorna un array con el texto de cada opción
            }, selectPin);

            console.log('Todas las opciones:', allOptions);

            const closestDateOption = await page.evaluate(() => {
                const select = document.querySelector('select');

                const monthMap = {
                    "ENE": "01",
                    "FEB": "02",
                    "MAR": "03",
                    "ABR": "04",
                    "MAY": "05",
                    "JUN": "06",
                    "JUL": "07",
                    "AGO": "08",
                    "SEP": "09",
                    "OCT": "10",
                    "NOV": "11",
                    "DIC": "12"
                };

                const options = Array.from(select.options).map(option => {
                    const text = option.textContent; // Ejemplo: "20241108074024, 08/DIC/2024"
                    const dateText = text.split(', ')[1]; // Extraer la fecha: "08/DIC/2024"

                    const [day, monthName, year] = dateText.split('/');
                    const month = monthMap[monthName];
                    const formattedDate = new Date(`${year}-${month}-${day}`);

                    return { text, date: formattedDate };
                });

                const now = new Date();

                const differences = options.map(option => {
                    const diff = Math.abs(option.date - now);
                    return { text: option.text, diff }; // Retornar la diferencia y el texto
                });

                console.log('Diferencias calculadas:', differences);

                // Reducir para encontrar la fecha más cercana
                const closest = options.reduce((prev, curr) => {
                    return (Math.abs(curr.date - now) < Math.abs(prev.date - now)) ? curr : prev;
                });

                return closest.text;
            });

            console.log('Opción más cercana a la fecha actual:', closestDateOption);
            const input = closestDateOption;
        /* FIN => VALIDACIÓN SI EL PIN ESTÁ PRÓXIMO A VENCERSE */

        await page.waitForXPath('//span[contains(.,"Continuar")]');
        const continPin = await page.$x('//span[contains(.,"Continuar")]');
        await continPin[1].click();
        await page.waitForTimeout(1000);

        const Fallopin = await page.$$eval("span", links =>

            links.map(link => link.textContent)
        );
        console.log(Fallopin[44]);
        var cont = 1;
        for (let i = 0; i < Fallopin.length; i++) {
            const elemento = Fallopin[i];
            //console.log("Este es el " + i + " " + Fallopin[i]);
            if (elemento == "Vea los errores a continuación:") {
                cont = 0;
            }

        }
        console.log(cont);
        if (cont == "0") {
            page.setDefaultTimeout(0);
            await page.waitForSelector('select[id="pinSlctId"]');
            const selectPin = await page.$('select[id="pinSlctId"]');
            await selectPin.type(Pin);

            await page.waitForXPath('//span[contains(.,"Continuar")]');
            const continPin = await page.$x('//span[contains(.,"Continuar")]');
            await continPin[1].click();
            /*
                        //await page.waitForTimeout(1000)
                        Primero();

                        browser.close();*/

        }

        /*await page.waitForNavigation({
           waitUntil: 'networkidle0',
       });*/

        if (await page.$x('//span[contains(.,"Vea los errores a continuación:")]').lenght > 0) {
            console.log('no pasó el pin');
            await page.waitForSelector('select[id="pinSlctId"]');
            const selectPin = await page.$('select[id="pinSlctId"]');
            await selectPin.type(Pin);

            const continPin = await page.$x('//span[contains(.,"Continuar")]');
            await continPin[1].click();
        }
        else if (await page.$x('//span[contains(.,"Vea los errores a continuación:")]').lenght == 0) {
            console.log('pasó el pin, hurra!');
        }






        await page.waitForSelector('button[ng-class="settings.buttonClasses"]');
        page.evaluate(() => {

            /* SELECCIONAR MINERALES POR NOMBRE */
            document.querySelector('[ng-class="settings.buttonClasses"]').click();

            // SE OBTIENEN LOS ELEMENTOS QUE TIENEN LA CLASE 'ng-binding ng-scope'
            var elementos = document.getElementsByClassName('ng-binding ng-scope');

            let Minerales = ['COBRE', 'cobre', 'MOLIBDENO', 'molibdeno', 'NIQUEL', 'niquel', 'ORO', 'oro', 'PLATA', 'plata', 'PLATINO', 'platino', 'WOLFRAMIO', 'wolframio', 'ZINC', 'zinc'];
            let elementosConMinerales = [];

            // ITERA SOBRE TODOS LOS ELEMENTOS CON CLASE (ng-binding ng-scope)
            for (let i = 0; i < elementos.length; i++) {
                let elemento = elementos[i];
                let agregarElemento = false;

                // ITERA SOBRE TODOS LOS VALORES DE LA LISTA MINERALES
                for (let c = 0; c < Minerales.length; c++) {

                    // VERIFICA SI EL TEXTO DEL ELEMENTO CONTIENE EXACTAMENTE EL MINERAL EN PROCESO DE LA LISTA DE MINERALES
                    if (elemento.textContent.includes(Minerales[c]) && elemento.textContent.split(/\s+/).includes(Minerales[c])) {
                        agregarElemento = true;
                        break;
                    }
                }

                // SI SE CUMPLE AGREGARELEMENTO === TRUE, SE AGREGA EL ELEMENTO A LA LISTA ELEMENTOSCONMINERALES
                if (agregarElemento) {
                    elementosConMinerales.push(elemento);
                }
            }

            // SE HACE CLIC SOBRE TODOS LOS VALORES CONTENIEDOS EN LA LISTA ELEMENTOSCONMINERALES
            for (let i = 0; i < elementosConMinerales.length; i++) {
                elementosConMinerales[i].click();
            }
            /* FIN FIN FIN */
        });

        clearTimeout(Segundopaso);



        //console.log(Area10);
        var Aviso = 0;
        var contador = 0;
        var Band = 1;
        var IdArea = '';
        var SoloAviso = 0;
        ContadorVueltas++;
        var Comas = 0;
        var Texto = "";
        var liberadas = 0;
        var Celda = 0;

        let ComasTotalesPorArea = {};
      
        while (Band != 99) {

            const Pestanas = await browser.pages();
            console.log(`HAY ${Pestanas.length} PESTAÑAS ABIERTAS`);
            if (Pestanas.length >= 4) {
                EnviarCorreosParaPestanas++;
                if (EnviarCorreosParaPestanas <= 2) {
                    // Se realiza envío de correo para alertar
                    Correo(5, '', '');
                }
            }

            // VerificarVencimientoPin(selectedText, input);
            VerificarVencimientoPin(closestDateOption, input);

            console.log("Inicia el timer");
            let TimeArea = setTimeout(() => {
                console.log("ENTRO EN EL TimeArea");
                page.close();
                Mineria(browser,  Pin);
            }, 25000);

            const selectArea = await page.$('select[name="areaOfConcessionSlct"]');
            await selectArea.type('Otro tipo de terreno');


            const continDetallesdelArea = await page.$x('//a[contains(.,"área")]');
            await continDetallesdelArea[4].click();

            const selectporCeldas = await page.$('select[id="selectedCellInputMethodSlctId"]');
            await selectporCeldas.type('Usando el mapa de selección para dibujar un polígono o ingresar celdas');
            contador++;


            console.log(contador);

            console.log("y este es la bandera = " + Band);
            let DetallesCompletos;
            function MonitorearAreas(IdArea, Aviso, Celda, Area, Comas) {
                //console.log(IdArea, Aviso, Celda, Comas);

                page.evaluate(({ Area }) => {
                    document.querySelector('[id="cellIdsTxtId"]').value = Area.join('');
                    angular.element(document.getElementById('cellIdsTxtId')).triggerHandler('change');
                }, { Area });


                DetallesCompletos = {
                    IdArea: IdArea,
                    Aviso: Aviso,
                    Celda: Celda,
                    Area: Area,
                    Comas: Comas
                }

                return DetallesCompletos;
            }

            // if (Band == 1000) {
            //     MonitorearAreas(
            //         "AreaDePrueba",
            //         1,
            //         "Esto es una celda de prueba",
            //         ["18N05N14M12R"],
            //         0
            //     );
            // }


             if (Band == 1) {
                MonitorearAreas(
                    "508359INFERIOR",
                    1,
                    "18N05A25C25V",
                    ["18N05A25C25V, 18N05A25C15Q, 18N05A25C09J, 18N05A25C10K, 18N05A25C05Q, 18N05A25C05A, 18N05A25G15B, 18N05A25G05G, 18N05A25G15C, 18N05A25G10C, 18N05A25G05M, 18N05A25G05H, 18N05A25C25M, 18N05A25C10M, 18N05A25C05C, 18N05A25G10D, 18N05A25G05D, 18N05A25C10Y, 18N05A25G10J, 18N05A25C25U, 18N05A25C25P, 18N05A25H06V, 18N05A25H06K, 18N05A25H06A, 18N05A25D11K, 18N05A25H06R, 18N05A25H06G, 18N05A25D21W, 18N05A25D21L, 18N05A25D06R, 18N05A25H01X, 18N05A25H06N, 18N05A25H01T, 18N05A25D21P, 18N05A25H02Q, 18N05A25D22K, 18N05A25D22A, 18N05A25H07R, 18N05A25H02W, 18N05A25H02R, 18N05A25H02G, 18N05A25H07X, 18N05A25H07S, 18N05A25H02H, 18N05A25D22J, 18N05A25D23K, 18N05A25D23R, 18N05A25H08X, 18N05A25H03E, 18N05A25D23Z, 18N05A25H09B, 18N05A25D24R, 18N05A25H09H, 18N05A25H09D, 18N05A25D24I, 18N05A25H09E, 18N05A25H04J, 18N05A25H10B, 18N05A25H05W, 18N05A25H10S, 18N05A25H05H, 18N05A25H10N, 18N05A25H10D, 18N05A25H05T, 18N05A25H10J, 18N05B21E11A, 18N05B21E06W, 18N05B21E01K, 18N05B21E01A, 18N05B21E01B, 18N05B21A21W, 18N05B21A21B, 18N05B21E06S, 18N05B21E01M, 18N05B21E01H, 18N05B21A21M, 18N05B21E06N, 18N05B21E06D, 18N05B21E01I, 18N05B21A21N, 18N05B21E01P, 18N05B21E07Q, 18N05B21A22K, 18N05B21E02G, 18N05B21E02B, 18N05B21E07Y, 18N05B21E02T, 18N05B21E02N, 18N05B21E07U, 18N05B21E07P, 18N05B21E02P, 18N05B21E02E, 18N05B21E03A, 18N05B21A23V, 18N05B21E13G, 18N05B21E08W, 18N05B21E08G, 18N05B21E08H, 18N05B21E03W, 18N05B21E03X, 18N05B21A23R, 18N05B21A23S, 18N05B21A23G, 18N05B21E14F, 18N05B21E04V, 18N05B21E04K, 18N05B21A24V, 18N05B21E09B, 18N05B21E04B, 18N05B21E14H, 18N05B21E04S, 18N05B21A24I, 18N05B21E04P, 18N05B21E04E, 18N05B21A25V, 18N05B21E15G, 18N05A25G10K, 18N05A25G10F, 18N05A25G05V, 18N05A25C25K, 18N05A25C25F, 18N05A25C20V, 18N05A25C20F, 18N05A25C09P, 18N05A25C10A, 18N05A25C04U, 18N05A25C05K, 18N05A25G10G, 18N05A25G10B, 18N05A25C15L, 18N05A25C05W, 18N05A25G10M, 18N05A25C15S, 18N05A25C15H, 18N05A25G10T, 18N05A25G05Y, 18N05A25C25Y, 18N05A25C20Y, 18N05A25C20Z, 18N05A25C20P, 18N05A25C20E, 18N05A25C15Z, 18N05A25H06Q, 18N05A25H06F, 18N05A25H01F, 18N05A25D16F, 18N05A25H01G, 18N05A25H01B, 18N05A25D21R, 18N05A25D16R, 18N05A25D11R, 18N05A25D11G, 18N05A25H06C, 18N05A25H01S, 18N05A25D21X, 18N05A25H06J, 18N05A25H07V, 18N05A25D22F, 18N05A25H12B, 18N05A25D22R, 18N05A25H07M, 18N05A25D22X, 18N05A25D22S, 18N05A25H07Y, 18N05A25H07T, 18N05A25D22I, 18N05A25H08Q, 18N05A25H03Q, 18N05A25D23V, 18N05A25D23Q, 18N05A25D23A, 18N05A25H13B, 18N05A25H03W, 18N05A25H08H, 18N05A25H03M, 18N05A25D23H, 18N05A25H03Y, 18N05A25H13E, 18N05A25H14A, 18N05A25H09K, 18N05A25H04K, 18N05A25H03J, 18N05A25H09W, 18N05A25D24W, 18N05A25H04S, 18N05A25D24C, 18N05A25H04D, 18N05A25D24T, 18N05A25D24N, 18N05A25D24Z, 18N05A25D24U, 18N05A25D25A, 18N05A25H10G, 18N05A25H05L, 18N05A25D25B, 18N05A25H10M, 18N05A25D25M, 18N05A25H05Y, 18N05A25H10P, 18N05A25H05J, 18N05A25D25Z, 18N05A25D25P, 18N05B21E06V, 18N05B21E06Q, 18N05B21E06K, 18N05B21E06G, 18N05B21A21A, 18N05B21E02V, 18N05B21E02K, 18N05B21A22F, 18N05B21A22W, 18N05B21E07C, 18N05B21E02X, 18N05B21E02H, 18N05B21A22X, 18N05B21E02I, 18N05B21E08Q, 18N05B21E03K, 18N05B21E08X, 18N05B21E08R, 18N05B21E08L, 18N05B21E03R, 18N05B21E03M, 18N05B21A23M, 18N05B21A23Y, 18N05B21E08U, 18N05B21E08E, 18N05B21A23U, 18N05B21A23P, 18N05B21A23E, 18N05B21E04A, 18N05B21E14G, 18N05B21E09W, 18N05B21E04W, 18N05B21A24B, 18N05B21A24M, 18N05B21E04Y, 18N05B21E04T, 18N05B21E04D, 18N05B21A24J, 18N05B21E10F, 18N05B21E10R, 18N05B21E05G, 18N05A25G15A, 18N05A25G10Q, 18N05A25G05K, 18N05A25G05F, 18N05A25C15F, 18N05A25C05V, 18N05A25C04P, 18N05A25G10R, 18N05A25G05W, 18N05A25G05L, 18N05A25C25G, 18N05A25C10G, 18N05A25C05R, 18N05A25G05X, 18N05A25C15M, 18N05A25C10C, 18N05A25G10I, 18N05A25G05N, 18N05A25C25N, 18N05A25G10Z, 18N05A25G05Z, 18N05A25G05J, 18N05A25C15P, 18N05A25D16A, 18N05A25H01R, 18N05A25D21G, 18N05A25D16W, 18N05A25H11C, 18N05A25H01H, 18N05A25D21M, 18N05A25D16M, 18N05A25D11H, 18N05A25D06S, 18N05A25H06Y, 18N05A25H06U, 18N05A25H01J, 18N05A25H07Q, 18N05A25H02V, 18N05A25H02F, 18N05A25H02B, 18N05A25H02I, 18N05A25D22N, 18N05A25H03A, 18N05A25H08W, 18N05A25H03G, 18N05A25H03B, 18N05A25D23G, 18N05A25H08N, 18N05A25H03U, 18N05A25H04V, 18N05A25D24V, 18N05A25D23J, 18N05A25D24F, 18N05A25H09C, 18N05A25H04M, 18N05A25H04Y, 18N05A25H04N, 18N05A25H04Z, 18N05A25H04U, 18N05A25H05A, 18N05A25D25V, 18N05A25H10I, 18N05A25H05I, 18N05A25D25I, 18N05A25H05U, 18N05A25H05P, 18N05B21E11B, 18N05B21E06R, 18N05B21E06B, 18N05B21E01Q, 18N05B21E06X, 18N05B21E01S, 18N05B21E06Y, 18N05B21A21I, 18N05B21A21D, 18N05B21A21U, 18N05B21E07B, 18N05B21E07S, 18N05B21E12I, 18N05B21E07T, 18N05B21E07D, 18N05B21A22T, 18N05B21A22N, 18N05B21E02U, 18N05B21E13A, 18N05B21E08V, 18N05B21A23A, 18N05B21E03H, 18N05B21E03C, 18N05B21E08N, 18N05B21E08I, 18N05B21E03N, 18N05B21A23T, 18N05B21E09K, 18N05B21A24F, 18N05B21E14B, 18N05B21E09R, 18N05B21A24G, 18N05B21E09M, 18N05B21A24C, 18N05B21A24Z, 18N05B21A25F, 18N05B21E05R, 18N05B21A25W, 18N05B21A25R, 18N05A25C20A, 18N05A25C15K, 18N05A25C25L, 18N05A25C10L, 18N05A25G05S, 18N05A25G05C, 18N05A25C20H, 18N05A25C05S, 18N05A25G10N, 18N05A25C15Y, 18N05A25G10P, 18N05A25G05E, 18N05A25C25J, 18N05A25C20U, 18N05A25C15J, 18N05A25C10U, 18N05A25D21V, 18N05A25D16V, 18N05A25H06B, 18N05A25D11B, 18N05A25H06M, 18N05A25H06H, 18N05A25D16H, 18N05A25D11S, 18N05A25H01Z, 18N05A25H01U, 18N05A25H01N, 18N05A25H01E, 18N05A25D21J, 18N05A25H02C, 18N05A25D22M, 18N05A25D22C, 18N05A25H12D, 18N05A25H07N, 18N05A25H07I, 18N05A25H07D, 18N05A25H07Z, 18N05A25H07J, 18N05A25H02J, 18N05A25D22Z, 18N05A25D22U, 18N05A25D22P, 18N05A25H03V, 18N05A25H03L, 18N05A25D23L, 18N05A25D23B, 18N05A25H08M, 18N05A25D23M, 18N05A25D23C, 18N05A25H08Y, 18N05A25H03D, 18N05A25H08J, 18N05A25H04A, 18N05A25D23U, 18N05A25D24K, 18N05A25D24G, 18N05A25H09S, 18N05A25H09M, 18N05A25D24H, 18N05A25H09T, 18N05A25H09P, 18N05A25H04E, 18N05A25H10K, 18N05A25H10A, 18N05A25H05K, 18N05A25H10R, 18N05A25H10L, 18N05A25H05B, 18N05A25D25R, 18N05A25H15C, 18N05A25H10H, 18N05A25H05X, 18N05A25D25H, 18N05A25D25N, 18N05A25H10E, 18N05A25H05Z, 18N05B21E11G, 18N05B21E01R, 18N05B21E06C, 18N05B21E01X, 18N05B21A21X, 18N05B21E01Y, 18N05B21E01T, 18N05B21A21Y, 18N05B21A21J, 18N05B21E12F, 18N05B21E07K, 18N05B21E07A, 18N05B21E07W, 18N05B21E02L, 18N05B21A22L, 18N05B21E07N, 18N05B21E07I, 18N05B21A22Y, 18N05B21E13F, 18N05B21E08A, 18N05B21E03V, 18N05B21A23Q, 18N05B21A23F, 18N05B21E13C, 18N05B21E08C, 18N05B21A23L, 18N05B21E03I, 18N05B21E13J, 18N05B21E03E, 18N05B21E09H, 18N05B21E04X, 18N05B21E04M, 18N05B21E04H, 18N05B21E04C, 18N05B21A24S, 18N05B21E09T, 18N05B21E09D, 18N05B21E04I, 18N05B21E14J, 18N05B21A24U, 18N05B21A24P, 18N05B21E05V, 18N05B21A25K, 18N05B21E10B, 18N05A25G10V, 18N05A25G10A, 18N05A25C15A, 18N05A25C10F, 18N05A25C09E, 18N05A25C04J, 18N05A25C04E, 18N05A25C25R, 18N05A25C20R, 18N05A25C20G, 18N05A25C10R, 18N05A25C05B, 18N05A25G10S, 18N05A25G10H, 18N05A25C10X, 18N05A25C05H, 18N05A25G10Y, 18N05A25C25T, 18N05A25C20I, 18N05A25C15T, 18N05A25C15D, 18N05A25G10U, 18N05A25H11A, 18N05A25H01A, 18N05A25D06V, 18N05A25H01C, 18N05A25D16S, 18N05A25H06Z, 18N05A25H01Y, 18N05A25H01P, 18N05A25D21N, 18N05A25D21D, 18N05A25H07A, 18N05A25H07G, 18N05A25H02L, 18N05A25D22W, 18N05A25D22B, 18N05A25H07P, 18N05A25H02U, 18N05A25H02P, 18N05A25H08A, 18N05A25H08C, 18N05A25H03C, 18N05A25D23X, 18N05A25D23S, 18N05A25H08T, 18N05A25H03T, 18N05A25H08U, 18N05A25H09A, 18N05A25H03Z, 18N05A25H03P, 18N05A25H04F, 18N05A25H14B, 18N05A25H09R, 18N05A25H04W, 18N05A25H04H, 18N05A25D24X, 18N05A25H04T, 18N05A25D24J, 18N05A25H10V, 18N05A25H10Q, 18N05A25H05Q, 18N05A25D25S, 18N05A25H05N, 18N05A25H05D, 18N05A25D25D, 18N05A25H10Z, 18N05A25D25U, 18N05B21E06F, 18N05B21A21V, 18N05B21A21F, 18N05B21A21H, 18N05B21A21C, 18N05B21A21T, 18N05B21E11J, 18N05B21E06E, 18N05B21A21Z, 18N05B21E07V, 18N05B21E02Q, 18N05B21E02F, 18N05B21E02A, 18N05B21E12B, 18N05B21E07G, 18N05B21E02R, 18N05B21A22R, 18N05B21E02D, 18N05B21E12E, 18N05B21A22P, 18N05B21A22J, 18N05B21A22E, 18N05B21E03Q, 18N05B21A23X, 18N05B21A23B, 18N05B21E13I, 18N05B21E13D, 18N05B21E03Y, 18N05B21A23N, 18N05B21A23I, 18N05B21A23D, 18N05B21E13E, 18N05B21E08Z, 18N05B21A23J, 18N05B21E09A, 18N05B21E09L, 18N05B21E14C, 18N05B21E09X, 18N05B21E09C, 18N05B21A24X, 18N05B21E14I, 18N05B21E14D, 18N05B21A24T, 18N05B21A24D, 18N05B21E04J, 18N05B21E15F, 18N05B21E10V, 18N05B21E10Q, 18N05B21E10K, 18N05B21E05K, 18N05B21E10W, 18N05A25G05Q, 18N05A25C25Q, 18N05A25C20K, 18N05A25C09Z, 18N05A25C09U, 18N05A25C10Q, 18N05A25G10W, 18N05A25G10L, 18N05A25C20L, 18N05A25C20B, 18N05A25C15R, 18N05A25C15G, 18N05A25C10W, 18N05A25G10X, 18N05A25C25X, 18N05A25C25S, 18N05A25C20X, 18N05A25C15X, 18N05A25C10S, 18N05A25C25I, 18N05A25C20T, 18N05A25G10E, 18N05A25C25Z, 18N05A25C25E, 18N05A25C15U, 18N05A25H01Q, 18N05A25H01K, 18N05A25D21Q, 18N05A25D21A, 18N05A25D16K, 18N05A25D11A, 18N05A25D16G, 18N05A25D11L, 18N05A25H06S, 18N05A25H01M, 18N05A25D11C, 18N05A25H11E, 18N05A25H06I, 18N05A25H06D, 18N05A25D21T, 18N05A25D21I, 18N05A25D21E, 18N05A25H02A, 18N05A25D22V, 18N05A25H07L, 18N05A25H07H, 18N05A25H02M, 18N05A25D22H, 18N05A25H02Y, 18N05A25H02T, 18N05A25D22D, 18N05A25H12E, 18N05A25D22E, 18N05A25H13A, 18N05A25H08L, 18N05A25H08B, 18N05A25H03R, 18N05A25H13C, 18N05A25D23T, 18N05A25D23N, 18N05A25D23D, 18N05A25H08P, 18N05A25D24Q, 18N05A25D23P, 18N05A25D24A, 18N05A25H09L, 18N05A25H04L, 18N05A25H04G, 18N05A25H04B, 18N05A25H14C, 18N05A25H09X, 18N05A25H04X, 18N05A25H04C, 18N05A25D24Y, 18N05A25H09J, 18N05A25D24P, 18N05A25H05V, 18N05A25H05F, 18N05A25H15B, 18N05A25D25G, 18N05A25H05M, 18N05A25D25C, 18N05A25H15D, 18N05A25D25Y, 18N05A25D25T, 18N05A25H10U, 18N05B21E06L, 18N05B21E01W, 18N05B21E01F, 18N05B21A21R, 18N05B21A21L, 18N05B21E06M, 18N05B21E06I, 18N05B21E11E, 18N05B21E06Z, 18N05B21E06P, 18N05B21E01J, 18N05B21E01E, 18N05B21A21P, 18N05B21A21E, 18N05B21E12A, 18N05B21A22Q, 18N05B21A22A, 18N05B21E12G, 18N05B21E07L, 18N05B21A22G, 18N05B21E12H, 18N05B21E07X, 18N05B21E07M, 18N05B21E02M, 18N05B21E02C, 18N05B21E02Y, 18N05B21A22D, 18N05B21A22Z, 18N05B21A23K, 18N05B21E13B, 18N05B21E08S, 18N05B21E03L, 18N05B21E03G, 18N05B21E03B, 18N05B21A23W, 18N05B21A23H, 18N05B21E08D, 18N05B21E08P, 18N05B21E08J, 18N05B21E14A, 18N05B21A24Q, 18N05B21A24K, 18N05B21A24A, 18N05B21E04L, 18N05B21E04G, 18N05B21A24W, 18N05B21A24Y, 18N05B21E04Z, 18N05B21E04U, 18N05B21A24E, 18N05B21E10A, 18N05B21E05Q, 18N05B21E05A, 18N05B21A25Q, 18N05B21E10G, 18N05A25C25A, 18N05A25C04Z, 18N05A25C05F, 18N05A25G05B, 18N05A25C20W, 18N05A25C15W, 18N05A25C15B, 18N05A25C25H, 18N05A25C25C, 18N05A25C20M, 18N05A25C15C, 18N05A25C10H, 18N05A25C05X, 18N05A25G15D, 18N05A25G05I, 18N05A25C15N, 18N05A25G05P, 18N05A25C15E, 18N05A25H01V, 18N05A25D21K, 18N05A25D16Q, 18N05A25D11F, 18N05A25D06Q, 18N05A25H06W, 18N05A25D21B, 18N05A25D16L, 18N05A25D16B, 18N05A25D06W, 18N05A25D21H, 18N05A25D16X, 18N05A25D16C, 18N05A25H11D, 18N05A25H06T, 18N05A25D21Z, 18N05A25D21U, 18N05A25D06T, 18N05A25H12A, 18N05A25H07K, 18N05A25H07B, 18N05A25D22L, 18N05A25H12C, 18N05A25H07C, 18N05A25H02X, 18N05A25H02S, 18N05A25H02D, 18N05A25H07U, 18N05A25H07E, 18N05A25H08K, 18N05A25H08S, 18N05A25H03H, 18N05A25H13D, 18N05A25H08I, 18N05A25H03N, 18N05A25H03I, 18N05A25D23Y, 18N05A25H04Q, 18N05A25H09G, 18N05A25D24M, 18N05A25H14D, 18N05A25H09N, 18N05A25H04I, 18N05A25D24D, 18N05A25H09Z, 18N05A25H09U, 18N05A25H04P, 18N05A25D25Q, 18N05A25H05R, 18N05A25H05G, 18N05A25D25W, 18N05A25D25L, 18N05A25H10X, 18N05A25H05S, 18N05A25D25X, 18N05A25H10T, 18N05A25D25J, 18N05A25D25E, 18N05B21E06A, 18N05B21E01L, 18N05B21A21K, 18N05B21A21G, 18N05B21E11I, 18N05B21E06U, 18N05B21E06J, 18N05B21E01U, 18N05B21E07F, 18N05B21A22V, 18N05B21E07R, 18N05B21E02W, 18N05B21A22B, 18N05B21E12C, 18N05B21A22S, 18N05B21A22M, 18N05B21A22H, 18N05B21E12J, 18N05B21E07Z, 18N05B21E07J, 18N05B21E08K, 18N05B21E03F, 18N05B21E08B, 18N05B21E03S, 18N05B21A23C, 18N05B21E08Y, 18N05B21E08T, 18N05B21E03Z, 18N05B21E03U, 18N05B21E03P, 18N05B21A23Z, 18N05B21E09Q, 18N05B21E04Q, 18N05B21E04F, 18N05B21E04R, 18N05B21A24R, 18N05B21A24H, 18N05B21E09Y, 18N05B21E14E, 18N05B21E09U, 18N05B21E15A, 18N05B21E05F, 18N05B21E05W, 18N05B21E05L, 18N05B21A25G, 18N05A25G05A, 18N05A25C20Q, 18N05A25C15V, 18N05A25C10V, 18N05A25G05R, 18N05A25C25W, 18N05A25C25B, 18N05A25C10B, 18N05A25C05L, 18N05A25C05G, 18N05A25C20S, 18N05A25C20C, 18N05A25C05M, 18N05A25G05T, 18N05A25C25D, 18N05A25C20N, 18N05A25C20D, 18N05A25C15I, 18N05A25C10T, 18N05A25G15E, 18N05A25G05U, 18N05A25C20J, 18N05A25C10Z, 18N05A25D21F, 18N05A25D11V, 18N05A25D11Q, 18N05A25H11B, 18N05A25H06L, 18N05A25H01W, 18N05A25H01L, 18N05A25D11W, 18N05A25H06X, 18N05A25D21S, 18N05A25D21C, 18N05A25D11X, 18N05A25D11M, 18N05A25D06X, 18N05A25H06P, 18N05A25H06E, 18N05A25H01I, 18N05A25H01D, 18N05A25D21Y, 18N05A25D06Y, 18N05A25H07F, 18N05A25H02K, 18N05A25D22Q, 18N05A25H07W, 18N05A25D22G, 18N05A25H02N, 18N05A25D22Y, 18N05A25D22T, 18N05A25H02Z, 18N05A25H02E, 18N05A25H08V, 18N05A25H08F, 18N05A25H03K, 18N05A25H03F, 18N05A25D23F, 18N05A25H08R, 18N05A25H08G, 18N05A25D23W, 18N05A25H03X, 18N05A25H03S, 18N05A25H08D, 18N05A25D23I, 18N05A25H08Z, 18N05A25H09V, 18N05A25H09Q, 18N05A25H09F, 18N05A25H08E, 18N05A25D23E, 18N05A25H04R, 18N05A25D24L, 18N05A25D24B, 18N05A25D24S, 18N05A25H09Y, 18N05A25H09I, 18N05A25H14E, 18N05A25D24E, 18N05A25H15A, 18N05A25H10F, 18N05A25D25K, 18N05A25D25F, 18N05A25H10W, 18N05A25H10C, 18N05A25H05C, 18N05A25H10Y, 18N05A25H15E, 18N05A25H05E, 18N05B21E01V, 18N05B21E01G, 18N05B21A21Q, 18N05B21E11H, 18N05B21E11C, 18N05B21E06H, 18N05B21E01C, 18N05B21A21S, 18N05B21E11D, 18N05B21E06T, 18N05B21E01N, 18N05B21E01D, 18N05B21E01Z, 18N05B21E07H, 18N05B21E02S, 18N05B21A22C, 18N05B21E12D, 18N05B21A22I, 18N05B21E07E, 18N05B21E02Z, 18N05B21E02J, 18N05B21A22U, 18N05B21E08F, 18N05B21E13H, 18N05B21E08M, 18N05B21E03T, 18N05B21E03D, 18N05B21E03J, 18N05B21E09V, 18N05B21E09F, 18N05B21E09G, 18N05B21A24L, 18N05B21E09S, 18N05B21E09N, 18N05B21E09I, 18N05B21E04N, 18N05B21A24N, 18N05B21E09Z, 18N05B21E09P, 18N05B21E09J, 18N05B21E09E, 18N05B21A25A, 18N05B21E15B, 18N05B21E10L, 18N05B21E05B, 18N05B21A25L, 18N05B21A25B"],
                    77
                );
            }else if (Band == 2) {
                MonitorearAreas(
                    "508359SUPERIOR",
                    1,
                    "18N05A20P11V",
                    ["18N05A20P11V, 18N05A20K21V, 18N05A20K21F, 18N05A20K16K, 18N05A20K06Q, 18N05A20K06A, 18N05A20P16G, 18N05A20P16B, 18N05A20P06R, 18N05A20P06L, 18N05A20K21W, 18N05A20K01W, 18N05A20K01R, 18N05A20P16H, 18N05A20P16C, 18N05A20P06H, 18N05A20K21H, 18N05A20K06S, 18N05A20K06C, 18N05A20K16Y, 18N05A20P11U, 18N05A20P06Z, 18N05A20P06J, 18N05A20P01Z, 18N05A20K21E, 18N05A20K16P, 18N05A20K11E, 18N05A20K06Z, 18N05A20K06P, 18N05A20K01E, 18N05A20K07K, 18N05A20K02K, 18N05A20P17B, 18N05A20P02W, 18N05A20K22R, 18N05A20K22X, 18N05A20K17W, 18N05A20K12H, 18N05A20P17N, 18N05A20P12Y, 18N05A20P07D, 18N05A20P02N, 18N05A20K02Y, 18N05A20P07U, 18N05A20K17E, 18N05A20K12J, 18N05A20K12E, 18N05A20K02E, 18N05A20P18F, 18N05A20P08K, 18N05A20P03F, 18N05A20K03K, 18N05A20P18G, 18N05A20P13B, 18N05A20P03L, 18N05A20K18R, 18N05A20K13R, 18N05A20P18H, 18N05A20P03M, 18N05A20P03H, 18N05A20K23M, 18N05A20K18S, 18N05A20K13X, 18N05A20K08X, 18N05A20K03X, 18N05A20P18I, 18N05A20P08N, 18N05A20P03I, 18N05A20K23Y, 18N05A20K08Y, 18N05A20K08T, 18N05A20K08D, 18N05A20P18P, 18N05A20P08E, 18N05A20K18Z, 18N05A20K13J, 18N05A20P14F, 18N05A20P09V, 18N05A20P04F, 18N05A20K09Q, 18N05A20K04V, 18N05A20P14B, 18N05A20K14G, 18N05A20P19H, 18N05A20P14H, 18N05A20P14D, 18N05A20P09C, 18N05A20P04M, 18N05A20P04C, 18N05A20K24N, 18N05A20K19X, 18N05A20K19C, 18N05A20K19D, 18N05A20K14N, 18N05A20K09Y, 18N05A20K09S, 18N05A20K09M, 18N05A20K09I, 18N05A20P24P, 18N05A20P09E, 18N05A20K09E, 18N05A20P25Q, 18N05A20P20A, 18N05A20P10Q, 18N05A20P05K, 18N05A20K20K, 18N05A20K15V, 18N05A20K10Q, 18N05A20K05K, 18N05A20P15W, 18N05A20P10G, 18N05A20P05W, 18N05A20P05G, 18N05A20K25W, 18N05A20K05R, 18N05A20P25M, 18N05A20P10H, 18N05A20K25S, 18N05A20K20H, 18N05A20K10S, 18N05A20K10M, 18N05A20K05X, 18N05A20K05M, 18N05A20P05D, 18N05A20K25D, 18N05A20K20I, 18N05A20K15T, 18N05A20K15D, 18N05A20K05N, 18N05A20P15P, 18N05A20P10U, 18N05A20K25U, 18N05A20K20U, 18N05A20K20P, 18N05A20K05J, 18N05A20Q11Q, 18N05A20Q11F, 18N05A20L21V, 18N05A20L16A, 18N05A20L11K, 18N05A20Q11R, 18N05A20Q01L, 18N05A20L11R, 18N05A20L06L, 18N05A20L01R, 18N05A20L01B, 18N05A20Q11C, 18N05A20Q06H, 18N05A20L21C, 18N05A20L16X, 18N05A20L06M, 18N05A20L01C, 18N05A20Q06D, 18N05A20Q06E, 18N05A20L16P, 18N05A20L16J, 18N05A20L16E, 18N05A20L11N, 18N05A20L11P, 18N05A20L01T, 18N05A20L12K, 18N05A20L07Q, 18N05A20L02K, 18N05A20L22R, 18N05A20L22L, 18N05A20L22B, 18N05A20L07B, 18N05A20L02W, 18N05A20L17C, 18N05A20L12M, 18N05A20L22Y, 18N05A20L07N, 18N05A20L07I, 18N05A20L12J, 18N05A20L07E, 18N05A20L02P, 18N05A20L23F, 18N05A20L23A, 18N05A20L18V, 18N05A20L03V, 18N05A20Q03B, 18N05A20L23B, 18N05A20L18X, 18N05A20L18C, 18N05A20L08X, 18N05A20L18T, 18N05A20L13D, 18N05A20Q04F, 18N05A20Q03E, 18N05A20L24Q, 18N05A20L19V, 18N05A20L13U, 18N05A20L13E, 18N05A20L04A, 18N05A20L24L, 18N05A20Q04C, 18N05A20L24M, 18N05A20L24H, 18N05A20L19X, 18N05A20L14S, 18N05A20L24T, 18N05A20L24D, 18N05A20L19T, 18N05A20L19I, 18N05A20L09D, 18N05A20L04Y, 18N05A20Q04P, 18N05A20L25F, 18N05A20L20Q, 18N05A20L20W, 18N05A20L15R, 18N05A20L15L, 18N05A20L10B, 18N05A20Q05H, 18N05A20L20C, 18N05A20Q05D, 18N05A20L25Y, 18N05A20L25T, 18N05A20L25D, 18N05A20L20Y, 18N05A20L15T, 18N05A20L05T, 18N05A20Q05P, 18N05A20L10U, 18N05A20L05P, 18N05B16I21W, 18N05B16I16W, 18N05B16I16B, 18N05B16I11L, 18N05B16I11F, 18N05B16I06Q, 18N05B16I21H, 18N05B16I01X, 18N05B16I01S, 18N05B16I21Y, 18N05B16I06I, 18N05B16I01N, 18N05B16I02F, 18N05B16M02L, 18N05B16M02B, 18N05B16I17W, 18N05B16M02C, 18N05B16I22M, 18N05B16I07H, 18N05B16I02H, 18N05B16I17I, 18N05B16I07T, 18N05B16I22P, 18N05B16I22J, 18N05B16I23Q, 18N05B16I23F, 18N05B16I18K, 18N05B16I13K, 18N05B16I08A, 18N05B16M03H, 18N05B16M03C, 18N05B16I23W, 18N05B16I18X, 18N05B16I18G, 18N05B16I13H, 18N05B16I08W, 18N05B16I08X, 18N05B16I08L, 18N05B16I08M, 18N05B16I03X, 18N05B16M03D, 18N05B16I13I, 18N05B16I03Y, 18N05B16M03J, 18N05B16M03E, 18N05B16I18J, 18N05B16I03U, 18N05B16I03P, 18N05B16M04K, 18N05B16I24V, 18N05B16I19K, 18N05B16I09Q, 18N05B16I24B, 18N05B16I14R, 18N05B16I14G, 18N05B16I09B, 18N05B16I19S, 18N05B16I04M, 18N05B16I24Y, 18N05B16I24T, 18N05B16I19D, 18N05B16I14D, 18N05B16I24U, 18N05B16I14P, 18N05B16I09Z, 18N05B16I09J, 18N05B16I04U, 18N05B16I25V, 18N05B16M05G, 18N05B16I25B, 18N05B16I05W, 18N05B16I05R, 18N05B16I20Y, 18N05B16I20C, 18N05B16I10S, 18N05A20P06V, 18N05A20P06A, 18N05A20K11F, 18N05A20K01Q, 18N05A20K01A, 18N05A20P16L, 18N05A20P11W, 18N05A20P06W, 18N05A20P01W, 18N05A20P01G, 18N05A20K16G, 18N05A20K06R, 18N05A20K06B, 18N05A20P16M, 18N05A20P11H, 18N05A20P01M, 18N05A20K16X, 18N05A20K06X, 18N05A20K01C, 18N05A20P06N, 18N05A20K21I, 18N05A20K06N, 18N05A20K06D, 18N05A20K01Y, 18N05A20K11Z, 18N05A20K11P, 18N05A20K11J, 18N05A20K01Z, 18N05A20P17A, 18N05A20K22K, 18N05A20K17V, 18N05A20K12K, 18N05A20K07F, 18N05A20K02Q, 18N05A20P17M, 18N05A20P07S, 18N05A20P07C, 18N05A20P02G, 18N05A20P02C, 18N05A20K22W, 18N05A20K17S, 18N05A20K17G, 18N05A20K07W, 18N05A20K07G, 18N05A20K02R, 18N05A20P12N, 18N05A20P07N, 18N05A20K12N, 18N05A20P17E, 18N05A20P12Z, 18N05A20P12U, 18N05A20P12J, 18N05A20P07Z, 18N05A20P02J, 18N05A20K22P, 18N05A20K22E, 18N05A20K12P, 18N05A20K07Z, 18N05A20K07J, 18N05A20P18K, 18N05A20P13Q, 18N05A20P13K, 18N05A20P03V, 18N05A20K13Q, 18N05A20K13F, 18N05A20P08L, 18N05A20P08G, 18N05A20P08B, 18N05A20P03G, 18N05A20K18G, 18N05A20K08W, 18N05A20K08G, 18N05A20K08B, 18N05A20K03L, 18N05A20P18M, 18N05A20K08H, 18N05A20P13Y, 18N05A20P13N, 18N05A20K18Y, 18N05A20K13I, 18N05A20K03N, 18N05A20P18J, 18N05A20K23U, 18N05A20K23J, 18N05A20K08Z, 18N05A20P09Q, 18N05A20P09F, 18N05A20K19V, 18N05A20K09A, 18N05A20P14W, 18N05A20P09L, 18N05A20K24W, 18N05A20K24R, 18N05A20K24B, 18N05A20K19W, 18N05A20P19D, 18N05A20P14N, 18N05A20P09M, 18N05A20K24X, 18N05A20K24D, 18N05A20K14Y, 18N05A20K14M, 18N05A20K04I, 18N05A20P14Z, 18N05A20P09P, 18N05A20P04P, 18N05A20K24U, 18N05A20K24E, 18N05A20K14Z, 18N05A20P15V, 18N05A20P10K, 18N05A20K25V, 18N05A20K25A, 18N05A20K10A, 18N05A20K05V, 18N05A20P05L, 18N05A20P25H, 18N05A20P20H, 18N05A20P15M, 18N05A20P10S, 18N05A20K25X, 18N05A20K25C, 18N05A20K20N, 18N05A20K15Y, 18N05A20K15I, 18N05A20K10T, 18N05A20K10I, 18N05A20K05D, 18N05A20P15U, 18N05A20P10P, 18N05A20P05E, 18N05A20K20E, 18N05A20K15P, 18N05A20K10P, 18N05A20K05P, 18N05A20Q16A, 18N05A20Q01K, 18N05A20L16F, 18N05A20L06F, 18N05A20L01K, 18N05A20Q06L, 18N05A20Q01R, 18N05A20L11B, 18N05A20Q11H, 18N05A20Q06S, 18N05A20Q01X, 18N05A20Q01S, 18N05A20L21H, 18N05A20L06H, 18N05A20L01H, 18N05A20Q11N, 18N05A20Q11D, 18N05A20Q06I, 18N05A20Q06J, 18N05A20Q01E, 18N05A20L16N, 18N05A20L01P, 18N05A20L01D, 18N05A20Q07A, 18N05A20Q02F, 18N05A20L22F, 18N05A20L17F, 18N05A20L07V, 18N05A20L07A, 18N05A20L22G, 18N05A20L07L, 18N05A20L07G, 18N05A20L02B, 18N05A20L22S, 18N05A20L17M, 18N05A20L12S, 18N05A20L02M, 18N05A20Q02I, 18N05A20L17T, 18N05A20L17N, 18N05A20L22J, 18N05A20L17J, 18N05A20L17E, 18N05A20L07P, 18N05A20L02Z, 18N05A20L02J, 18N05A20L18A, 18N05A20L23G, 18N05A20L18G, 18N05A20L08G, 18N05A20L03L, 18N05A20L13S, 18N05A20L03S, 18N05A20L03C, 18N05A20Q03D, 18N05A20L23T, 18N05A20L23D, 18N05A20L13I, 18N05A20L03I, 18N05A20L23P, 18N05A20L24K, 18N05A20L18J, 18N05A20L19F, 18N05A20L14Q, 18N05A20L14F, 18N05A20L09A, 18N05A20L04F, 18N05A20L24W, 18N05A20L24R, 18N05A20L24G, 18N05A20L19B, 18N05A20L09G, 18N05A20L04L, 18N05A20L04G, 18N05A20L19S, 18N05A20L19M, 18N05A20L19H, 18N05A20L14H, 18N05A20L19Y, 18N05A20L09N, 18N05A20L24J, 18N05A20L19U, 18N05A20L14U, 18N05A20L09Z, 18N05A20L09J, 18N05A20L04E, 18N05A20L05A, 18N05A20L20L, 18N05A20L05W, 18N05A20Q05C, 18N05A20L25X, 18N05A20L20X, 18N05A20L05M, 18N05A20Q05I, 18N05A20L10T, 18N05A20L05D, 18N05A20Q05E, 18N05A20L25Z, 18N05A20L25U, 18N05A20L25J, 18N05A20L20U, 18N05A20L15E, 18N05B16M01G, 18N05B16I21Q, 18N05B16I21L, 18N05B16I16A, 18N05B16I11Q, 18N05B16I11R, 18N05B16I06W, 18N05B16I06G, 18N05B16I06A, 18N05B16I01V, 18N05B16I01R, 18N05B16I01K, 18N05B16I21M, 18N05B16I01H, 18N05B16I01C, 18N05B16I21I, 18N05B16I21D, 18N05B16I11Y, 18N05B16I11D, 18N05B16I06N, 18N05B16I01Y, 18N05B16I16Z, 18N05B16I16P, 18N05B16I11J, 18N05B16I06U, 18N05B16I06J, 18N05B16I17Q, 18N05B16I17F, 18N05B16I07Q, 18N05B16I22R, 18N05B16I07G, 18N05B16I17S, 18N05B16I12S, 18N05B16I02S, 18N05B16M02D, 18N05B16I17T, 18N05B16I02D, 18N05B16I02J, 18N05B16I08F, 18N05B16M03M, 18N05B16I18M, 18N05B16I18C, 18N05B16I13L, 18N05B16I03C, 18N05B16I23I, 18N05B16I18I, 18N05B16I13D, 18N05B16I13Z, 18N05B16M04A, 18N05B16I19A, 18N05B16I14V, 18N05B16I24H, 18N05B16I09S, 18N05B16I04C, 18N05B16I14Y, 18N05B16I14T, 18N05B16I04I, 18N05B16I04D, 18N05B16I24J, 18N05B16I24E, 18N05B16I14E, 18N05B16I09U, 18N05B16I09P, 18N05B16I09E, 18N05B16M05K, 18N05B16M05F, 18N05B16I20K, 18N05B16I20A, 18N05B16I15A, 18N05B16I10A, 18N05B16I05K, 18N05B16I05F, 18N05B16I05A, 18N05B16I25G, 18N05B16I20G, 18N05B16I15B, 18N05B16M05D, 18N05B16I20I, 18N05B16I15C, 18N05B16I05X, 18N05B16I05S, 18N05A20P06Q, 18N05A20K21Q, 18N05A20K11Q, 18N05A20K01F, 18N05A20P11B, 18N05A20P01R, 18N05A20K21L, 18N05A20K16B, 18N05A20K11R, 18N05A20P06X, 18N05A20P06S, 18N05A20K06M, 18N05A20K01X, 18N05A20K01H, 18N05A20P01Y, 18N05A20K21T, 18N05A20K21D, 18N05A20K11N, 18N05A20K06T, 18N05A20P06P, 18N05A20P01P, 18N05A20P01J, 18N05A20K21J, 18N05A20K06E, 18N05A20P12A, 18N05A20P07Q, 18N05A20P07F, 18N05A20K17K, 18N05A20K17F, 18N05A20K07A, 18N05A20P12S, 18N05A20P02R, 18N05A20P02S, 18N05A20P02M, 18N05A20K22L, 18N05A20K22B, 18N05A20K17M, 18N05A20K17H, 18N05A20K12B, 18N05A20K07H, 18N05A20K02W, 18N05A20K02L, 18N05A20K02G, 18N05A20K02B, 18N05A20P17I, 18N05A20P17D, 18N05A20P12T, 18N05A20K22I, 18N05A20K12I, 18N05A20K12D, 18N05A20K02N, 18N05A20K02I, 18N05A20P17J, 18N05A20K22Z, 18N05A20K02J, 18N05A20K13V, 18N05A20K08V, 18N05A20K03F, 18N05A20K03A, 18N05A20P18L, 18N05A20P13L, 18N05A20K23W, 18N05A20K03G, 18N05A20K03B, 18N05A20P18C, 18N05A20K23C, 18N05A20K18M, 18N05A20K13M, 18N05A20K13H, 18N05A20P18N, 18N05A20P18D, 18N05A20P13I, 18N05A20P08Y, 18N05A20P08I, 18N05A20K03D, 18N05A20P13E, 18N05A20K23Z, 18N05A20K18U, 18N05A20K13U, 18N05A20K03E, 18N05A20P04Q, 18N05A20P04K, 18N05A20K24Q, 18N05A20K19A, 18N05A20K14K, 18N05A20K04Q, 18N05A20P14R, 18N05A20P04L, 18N05A20K24L, 18N05A20K09W, 18N05A20K04W, 18N05A20K04L, 18N05A20K04G, 18N05A20P19C, 18N05A20P14T, 18N05A20P14C, 18N05A20P09X, 18N05A20P09T, 18N05A20P09D, 18N05A20P04Y, 18N05A20P04T, 18N05A20P04H, 18N05A20K14H, 18N05A20K09N, 18N05A20P19Z, 18N05A20P19P, 18N05A20P09J, 18N05A20K24J, 18N05A20K19Z, 18N05A20K19J, 18N05A20K09U, 18N05A20K09J, 18N05A20K04J, 18N05A20P05V, 18N05A20P05A, 18N05A20K15K, 18N05A20K15F, 18N05A20K05Q, 18N05A20P25R, 18N05A20P20W, 18N05A20P15R, 18N05A20P10B, 18N05A20K25B, 18N05A20K10L, 18N05A20P25S, 18N05A20P20X, 18N05A20P20S, 18N05A20P20M, 18N05A20P05M, 18N05A20K25H, 18N05A20K10C, 18N05A20K05H, 18N05A20K05C, 18N05A20P20Y, 18N05A20P10T, 18N05A20P10I, 18N05A20P05N, 18N05A20K05T, 18N05A20P20Z, 18N05A20P20P, 18N05A20P20J, 18N05A20P20E, 18N05A20P15J, 18N05A20P10E, 18N05A20P05U, 18N05A20K25Z, 18N05A20K05U, 18N05A20Q11A, 18N05A20Q06F, 18N05A20L21F, 18N05A20L11V, 18N05A20L06Q, 18N05A20L06A, 18N05A20L01F, 18N05A20Q01B, 18N05A20L21L, 18N05A20L11L, 18N05A20Q01M, 18N05A20Q01H, 18N05A20L11X, 18N05A20L11H, 18N05A20Q06Y, 18N05A20Q01U, 18N05A20Q01N, 18N05A20L21Y, 18N05A20L21U, 18N05A20L21I, 18N05A20L16D, 18N05A20L11Y, 18N05A20L11I, 18N05A20L06N, 18N05A20L01N, 18N05A20L01I, 18N05A20L01E, 18N05A20L22V, 18N05A20L02A, 18N05A20Q02R, 18N05A20L22W, 18N05A20L17W, 18N05A20L12W, 18N05A20L12L, 18N05A20L17H, 18N05A20L12C, 18N05A20L07X, 18N05A20L22D, 18N05A20L12N, 18N05A20L07Y, 18N05A20L07D, 18N05A20L02I, 18N05A20L17Z, 18N05A20L07J, 18N05A20Q03K, 18N05A20L18Q, 18N05A20L13K, 18N05A20L13R, 18N05A20Q03M, 18N05A20L18S, 18N05A20L18M, 18N05A20L08S, 18N05A20L03M, 18N05A20Q03I, 18N05A20L18D, 18N05A20L08D, 18N05A20Q03J, 18N05A20Q04A, 18N05A20L24F, 18N05A20L19Q, 18N05A20L14A, 18N05A20L14G, 18N05A20L14B, 18N05A20L09R, 18N05A20L09B, 18N05A20L04B, 18N05A20Q04N, 18N05A20Q04D, 18N05A20L14T, 18N05A20L09I, 18N05A20L04I, 18N05A20Q04J, 18N05A20L24U, 18N05A20L24E, 18N05A20Q05A, 18N05A20L25K, 18N05A20L10K, 18N05A20L20B, 18N05A20L05G, 18N05A20Q05M, 18N05A20L15S, 18N05A20L15C, 18N05A20L05H, 18N05A20L20I, 18N05A20L15I, 18N05A20L10Y, 18N05A20L10D, 18N05A20L05Y, 18N05A20L25E, 18N05A20L05Z, 18N05B16I21G, 18N05B16I06R, 18N05B16I06L, 18N05B16I01F, 18N05B16I21C, 18N05B16I16C, 18N05B16I11H, 18N05B16I01M, 18N05B16I16Y, 18N05B16I16N, 18N05B16I11N, 18N05B16I01I, 18N05B16M01P, 18N05B16I21P, 18N05B16M02A, 18N05B16I22Q, 18N05B16I07K, 18N05B16I02K, 18N05B16I02A, 18N05B16I22B, 18N05B16I17G, 18N05B16I12R, 18N05B16I12L, 18N05B16I07W, 18N05B16I07R, 18N05B16I22H, 18N05B16I17X, 18N05B16I12H, 18N05B16M02J, 18N05B16I22U, 18N05B16I12P, 18N05B16I18V, 18N05B16M03G, 18N05B16I23M, 18N05B16I18B, 18N05B16I13C, 18N05B16I08H, 18N05B16I08B, 18N05B16I03R, 18N05B16M03N, 18N05B16M03I, 18N05B16I23N, 18N05B16I18T, 18N05B16I18N, 18N05B16I18D, 18N05B16I18P, 18N05B16I13P, 18N05B16I13J, 18N05B16M04F, 18N05B16I24K, 18N05B16I24F, 18N05B16I19Q, 18N05B16I14Q, 18N05B16I09K, 18N05B16I09A, 18N05B16I24R, 18N05B16I24L, 18N05B16I19W, 18N05B16I14L, 18N05B16M04H, 18N05B16I14S, 18N05B16I09M, 18N05B16I19N, 18N05B16I09D, 18N05B16M04E, 18N05B16I19Z, 18N05B16I20Q, 18N05B16M05L, 18N05B16M05B, 18N05B16M05M, 18N05B16I25Y, 18N05B16I20S, 18N05B16I20M, 18N05B16I15I, 18N05B16I05Y, 18N05A20P16F, 18N05A20P11A, 18N05A20P01K, 18N05A20K21A, 18N05A20K16Q, 18N05A20K16A, 18N05A20K06F, 18N05A20K01V, 18N05A20P11L, 18N05A20K21B, 18N05A20K16W, 18N05A20K16L, 18N05A20K11G, 18N05A20K01B, 18N05A20P11X, 18N05A20P11S, 18N05A20P01S, 18N05A20K06H, 18N05A20P11Y, 18N05A20P11T, 18N05A20P01D, 18N05A20K16T, 18N05A20K11T, 18N05A20K01T, 18N05A20K01I, 18N05A20P16P, 18N05A20P11P, 18N05A20P11E, 18N05A20P01U, 18N05A20K21U, 18N05A20K16Z, 18N05A20K16J, 18N05A20K06J, 18N05A20K01J, 18N05A20P02V, 18N05A20K22Q, 18N05A20K22F, 18N05A20K22A, 18N05A20K12V, 18N05A20K12A, 18N05A20K07V, 18N05A20K02A, 18N05A20P17G, 18N05A20P12W, 18N05A20P12R, 18N05A20P12B, 18N05A20P07X, 18N05A20K22C, 18N05A20K12W, 18N05A20K07S, 18N05A20K02M, 18N05A20K02C, 18N05A20P07T, 18N05A20K17Y, 18N05A20K17N, 18N05A20P12P, 18N05A20K22J, 18N05A20K17Z, 18N05A20K17U, 18N05A20K07P, 18N05A20K02U, 18N05A20P18A, 18N05A20P13A, 18N05A20K18Q, 18N05A20K13A, 18N05A20K08Q, 18N05A20K08A, 18N05A20P08R, 18N05A20P03W, 18N05A20K23L, 18N05A20K18B, 18N05A20K13W, 18N05A20P08S, 18N05A20K23S, 18N05A20K08C, 18N05A20K03S, 18N05A20K03M, 18N05A20P13T, 18N05A20P03N, 18N05A20K13D, 18N05A20P18E, 18N05A20P13P, 18N05A20P03Z, 18N05A20P03U, 18N05A20K18P, 18N05A20K13E, 18N05A20P14Q, 18N05A20P14K, 18N05A20P04A, 18N05A20K24A, 18N05A20K14Q, 18N05A20K14A, 18N05A20K09V, 18N05A20K09F, 18N05A20K04K, 18N05A20P19L, 18N05A20P04R, 18N05A20P04B, 18N05A20K24G, 18N05A20K19G, 18N05A20K14W, 18N05A20K14B, 18N05A20K09G, 18N05A20K04B, 18N05A20P19M, 18N05A20P19I, 18N05A20P09Y, 18N05A20P04I, 18N05A20K24H, 18N05A20K19Y, 18N05A20K19T, 18N05A20K09T, 18N05A20P19U, 18N05A20P19J, 18N05A20K19U, 18N05A20K19E, 18N05A20K14U, 18N05A20K14J, 18N05A20P20Q, 18N05A20P20F, 18N05A20P15K, 18N05A20P05Q, 18N05A20K25K, 18N05A20K20F, 18N05A20K10V, 18N05A20K10F, 18N05A20P20L, 18N05A20P20B, 18N05A20P10W, 18N05A20K20L, 18N05A20K15L, 18N05A20K10B, 18N05A20K05B, 18N05A20P25C, 18N05A20P20C, 18N05A20P05X, 18N05A20P05C, 18N05A20K15X, 18N05A20P05Y, 18N05A20K25N, 18N05A20K20Y, 18N05A20K20D, 18N05A20K15N, 18N05A20P10J, 18N05A20K15J, 18N05A20Q16K, 18N05A20Q06V, 18N05A20Q06A, 18N05A20Q01F, 18N05A20L16V, 18N05A20L16Q, 18N05A20L16K, 18N05A20L01V, 18N05A20Q01W, 18N05A20Q01G, 18N05A20L11G, 18N05A20L06W, 18N05A20L06B, 18N05A20Q06X, 18N05A20L21S, 18N05A20L11M, 18N05A20Q01I, 18N05A20L11U, 18N05A20L06Z, 18N05A20L06J, 18N05A20L06D, 18N05A20L01Y, 18N05A20L01U, 18N05A20Q02V, 18N05A20L22K, 18N05A20L17Q, 18N05A20L17A, 18N05A20Q02W, 18N05A20L17G, 18N05A20L12G, 18N05A20L02R, 18N05A20Q02M, 18N05A20L22C, 18N05A20L02S, 18N05A20Q02D, 18N05A20L02N, 18N05A20Q02E, 18N05A20L22E, 18N05A20L17P, 18N05A20L12U, 18N05A20L12P, 18N05A20L07U, 18N05A20L18K, 18N05A20L18F, 18N05A20L13Q, 18N05A20L13G, 18N05A20L13B, 18N05A20L08R, 18N05A20L08L, 18N05A20Q03C, 18N05A20L23S, 18N05A20L23C, 18N05A20L13M, 18N05A20L13H, 18N05A20L23N, 18N05A20L03Y, 18N05A20L19K, 18N05A20L14K, 18N05A20L08Z, 18N05A20L09Q, 18N05A20L24B, 18N05A20L09L, 18N05A20L14M, 18N05A20L09X, 18N05A20L04C, 18N05A20Q04I, 18N05A20L19N, 18N05A20L14Y, 18N05A20Q04E, 18N05A20L24P, 18N05A20L19E, 18N05A20L14Z, 18N05A20L09P, 18N05A20L09E, 18N05A20L20V, 18N05A20L05V, 18N05A20L05Q, 18N05A20Q05L, 18N05A20Q05B, 18N05A20L25R, 18N05A20L25G, 18N05A20L25B, 18N05A20L15B, 18N05A20L20M, 18N05A20L15M, 18N05A20L10X, 18N05A20L10H, 18N05A20L20N, 18N05A20L15Y, 18N05A20L10N, 18N05A20L15U, 18N05A20L05J, 18N05A20L05E, 18N05B16I21A, 18N05B16I16R, 18N05B16I16L, 18N05B16I11B, 18N05B16I01W, 18N05B16I01L, 18N05B16I01A, 18N05B16I16S, 18N05B16I11S, 18N05B16I16I, 18N05B16I01Z, 18N05B16I17A, 18N05B16I12F, 18N05B16I07B, 18N05B16I02W, 18N05B16I02B, 18N05B16I17H, 18N05B16I17C, 18N05B16I12C, 18N05B16I07X, 18N05B16I07M, 18N05B16M02I, 18N05B16I22Y, 18N05B16I22N, 18N05B16I17D, 18N05B16I12D, 18N05B16M02P, 18N05B16I17J, 18N05B16I07U, 18N05B16I02E, 18N05B16I13V, 18N05B16I13F, 18N05B16M03B, 18N05B16I23X, 18N05B16I18W, 18N05B16I13W, 18N05B16I13X, 18N05B16I03G, 18N05B16I23Y, 18N05B16I03I, 18N05B16I23U, 18N05B16I08U, 18N05B16I19V, 18N05B16I14F, 18N05B16I14A, 18N05B16I04K, 18N05B16M04G, 18N05B16I24W, 18N05B16I14B, 18N05B16I09L, 18N05B16M04M, 18N05B16I24S, 18N05B16I24C, 18N05B16I19X, 18N05B16I14X, 18N05B16I19T, 18N05B16I09N, 18N05B16M04J, 18N05B16I24P, 18N05B16I19U, 18N05B16I04J, 18N05B16I25K, 18N05B16I15K, 18N05B16I10F, 18N05B16I05V, 18N05B16I15R, 18N05B16I15G, 18N05B16I10B, 18N05B16M05H, 18N05B16I25X, 18N05B16I20D, 18N05B16I15S, 18N05B16I15M, 18N05B16I15H, 18N05B16I05N, 18N05A20P11K, 18N05A20P06K, 18N05A20P01V, 18N05A20P01Q, 18N05A20P01F, 18N05A20P01A, 18N05A20K21K, 18N05A20K16V, 18N05A20K11V, 18N05A20K11A, 18N05A20K01K, 18N05A20K21R, 18N05A20K21G, 18N05A20K06W, 18N05A20K06L, 18N05A20K06G, 18N05A20P06C, 18N05A20P01X, 18N05A20K16S, 18N05A20P16N, 18N05A20P16D, 18N05A20P11D, 18N05A20P16E, 18N05A20P06U, 18N05A20K01P, 18N05A20P02K, 18N05A20P02A, 18N05A20K12F, 18N05A20K02F, 18N05A20P12X, 18N05A20P12C, 18N05A20P07M, 18N05A20K22G, 18N05A20K07L, 18N05A20K07B, 18N05A20P12D, 18N05A20P07I, 18N05A20K22D, 18N05A20K17D, 18N05A20K07D, 18N05A20K02T, 18N05A20P12E, 18N05A20P07P, 18N05A20K17J, 18N05A20P13F, 18N05A20P08Q, 18N05A20P08A, 18N05A20K23Q, 18N05A20K23F, 18N05A20K23A, 18N05A20K18F, 18N05A20P08W, 18N05A20K23R, 18N05A20K18W, 18N05A20K13B, 18N05A20K03W, 18N05A20P08C, 18N05A20K18C, 18N05A20K13S, 18N05A20K13C, 18N05A20K08M, 18N05A20P08T, 18N05A20P03T, 18N05A20K23N, 18N05A20K08N, 18N05A20K03Y, 18N05A20P13Z, 18N05A20P13U, 18N05A20P13J, 18N05A20P08J, 18N05A20P03P, 18N05A20K23P, 18N05A20K18J, 18N05A20K13P, 18N05A20K03J, 18N05A20P19A, 18N05A20P09K, 18N05A20K14F, 18N05A20P19B, 18N05A20P09W, 18N05A20P09G, 18N05A20P04W, 18N05A20K19R, 18N05A20K19L, 18N05A20K14R, 18N05A20K09B, 18N05A20K04R, 18N05A20P19N, 18N05A20P14M, 18N05A20P04N, 18N05A20K19I, 18N05A20K14S, 18N05A20K04X, 18N05A20K04S, 18N05A20K04M, 18N05A20K04D, 18N05A20P04Z, 18N05A20P04J, 18N05A20K14P, 18N05A20K09P, 18N05A20K04Z, 18N05A20K04P, 18N05A20P25F, 18N05A20K20V, 18N05A20K15A, 18N05A20P20R, 18N05A20P10L, 18N05A20K25G, 18N05A20K20G, 18N05A20K15W, 18N05A20K15G, 18N05A20K10R, 18N05A20K05W, 18N05A20K05L, 18N05A20K05G, 18N05A20P15H, 18N05A20P10M, 18N05A20P05S, 18N05A20P05H, 18N05A20K25M, 18N05A20K20S, 18N05A20K20C, 18N05A20K10H, 18N05A20P20T, 18N05A20P15I, 18N05A20P15D, 18N05A20P10Y, 18N05A20P10D, 18N05A20P10Z, 18N05A20P05J, 18N05A20K25P, 18N05A20K20Z, 18N05A20K20J, 18N05A20K10U, 18N05A20Q06Q, 18N05A20Q01Q, 18N05A20L21Q, 18N05A20L21A, 18N05A20L01A, 18N05A20L21R, 18N05A20L21B, 18N05A20L16G, 18N05A20L06R, 18N05A20L01G, 18N05A20Q01C, 18N05A20L21X, 18N05A20L16C, 18N05A20L11S, 18N05A20Q11I, 18N05A20Q06P, 18N05A20Q01J, 18N05A20Q01D, 18N05A20L21D, 18N05A20L16Y, 18N05A20L16T, 18N05A20L11J, 18N05A20L11D, 18N05A20L06Y, 18N05A20L06U, 18N05A20L06P, 18N05A20L17V, 18N05A20L17K, 18N05A20L12A, 18N05A20L02Q, 18N05A20L12R, 18N05A20L22M, 18N05A20L07M, 18N05A20L22N, 18N05A20L17Y, 18N05A20L12T, 18N05A20L02Y, 18N05A20L02T, 18N05A20Q02J, 18N05A20L22Z, 18N05A20L17U, 18N05A20L02E, 18N05A20Q03A, 18N05A20L23V, 18N05A20L08Q, 18N05A20L03K, 18N05A20L03F, 18N05A20L23L, 18N05A20L18L, 18N05A20L13L, 18N05A20L08W, 18N05A20Q03H, 18N05A20L23X, 18N05A20L13X, 18N05A20L13C, 18N05A20L08M, 18N05A20L08T, 18N05A20L08N, 18N05A20L03N, 18N05A20L03D, 18N05A20L18Z, 18N05A20L18P, 18N05A20L13J, 18N05A20L09V, 18N05A20L09F, 18N05A20L03U, 18N05A20L04Q, 18N05A20L03P, 18N05A20Q04L, 18N05A20L19W, 18N05A20L19L, 18N05A20L24X, 18N05A20L24C, 18N05A20L19C, 18N05A20L14X, 18N05A20L04H, 18N05A20L24N, 18N05A20L24I, 18N05A20L04N, 18N05A20L19Z, 18N05A20L14J, 18N05A20L09U, 18N05A20Q05K, 18N05A20L25V, 18N05A20L20K, 18N05A20L20A, 18N05A20L15V, 18N05A20L15K, 18N05A20L15F, 18N05A20L05F, 18N05A20L25W, 18N05A20L20G, 18N05A20L10G, 18N05A20L05B, 18N05A20L20H, 18N05A20L05C, 18N05A20L10I, 18N05A20Q05J, 18N05A20L20P, 18N05A20L15P, 18N05B16M01F, 18N05B16I21V, 18N05B16I21R, 18N05B16I21K, 18N05B16I16G, 18N05B16I11G, 18N05B16I01G, 18N05B16I01B, 18N05B16I16X, 18N05B16I16M, 18N05B16I16H, 18N05B16I11M, 18N05B16I06H, 18N05B16M01N, 18N05B16M01D, 18N05B16I16T, 18N05B16I11I, 18N05B16M01E, 18N05B16I21E, 18N05B16I16J, 18N05B16I11E, 18N05B16I06Z, 18N05B16I22K, 18N05B16I17K, 18N05B16I12V, 18N05B16I12Q, 18N05B16I12K, 18N05B16I22W, 18N05B16I22L, 18N05B16I12G, 18N05B16I12B, 18N05B16I22X, 18N05B16I12X, 18N05B16I12M, 18N05B16I02X, 18N05B16I22T, 18N05B16I22D, 18N05B16I12I, 18N05B16I02T, 18N05B16M02E, 18N05B16I07P, 18N05B16I02P, 18N05B16I23A, 18N05B16I18F, 18N05B16I03Q, 18N05B16I03F, 18N05B16M03L, 18N05B16I23R, 18N05B16I23S, 18N05B16I23L, 18N05B16I23C, 18N05B16I08R, 18N05B16I08G, 18N05B16I03L, 18N05B16I03M, 18N05B16I03H, 18N05B16I23D, 18N05B16I13N, 18N05B16I08Y, 18N05B16I08I, 18N05B16I23P, 18N05B16I23J, 18N05B16I13U, 18N05B16I08P, 18N05B16I14K, 18N05B16I09F, 18N05B16I04V, 18N05B16I04Q, 18N05B16I19B, 18N05B16I14W, 18N05B16I04R, 18N05B16I04L, 18N05B16M04C, 18N05B16I19M, 18N05B16I24D, 18N05B16I19I, 18N05B16I14I, 18N05B16I14Z, 18N05B16I14U, 18N05B16I04Z, 18N05B16I04P, 18N05B16M05A, 18N05B16I20F, 18N05B16I15V, 18N05B16I20B, 18N05B16I10W, 18N05B16I10R, 18N05B16I05G, 18N05B16M05N, 18N05B16I25T, 18N05B16I25M, 18N05B16I25N, 18N05B16I25C, 18N05B16I25D, 18N05B16I20H, 18N05B16I05T, 18N05B16I05H, 18N05B16I05C, 18N05A20P11F, 18N05A20K11K, 18N05A20K06K, 18N05A20K11W, 18N05A20K11B, 18N05A20K01L, 18N05A20P06M, 18N05A20K21S, 18N05A20K16H, 18N05A20K16C, 18N05A20K11S, 18N05A20K11C, 18N05A20K01M, 18N05A20P11N, 18N05A20P11I, 18N05A20P06I, 18N05A20P06D, 18N05A20P01T, 18N05A20K21Y, 18N05A20K16I, 18N05A20K11Y, 18N05A20K06I, 18N05A20K01N, 18N05A20K01D, 18N05A20P16J, 18N05A20P11Z, 18N05A20P01E, 18N05A20K21P, 18N05A20K16U, 18N05A20K16E, 18N05A20K01U, 18N05A20P12V, 18N05A20P12F, 18N05A20P07A, 18N05A20P02Q, 18N05A20P02F, 18N05A20K22V, 18N05A20K17Q, 18N05A20K12Q, 18N05A20K07Q, 18N05A20K02V, 18N05A20P17H, 18N05A20P12L, 18N05A20P12M, 18N05A20P07R, 18N05A20P07G, 18N05A20P02X, 18N05A20K22H, 18N05A20K17R, 18N05A20K17L, 18N05A20K17B, 18N05A20K17C, 18N05A20K12L, 18N05A20K12S, 18N05A20K12M, 18N05A20K12G, 18N05A20K07R, 18N05A20K07C, 18N05A20K02S, 18N05A20P12I, 18N05A20P02D, 18N05A20K17T, 18N05A20K07Y, 18N05A20K07N, 18N05A20K07I, 18N05A20K02D, 18N05A20P02P, 18N05A20P02E, 18N05A20K07E, 18N05A20K02P, 18N05A20P08V, 18N05A20P03Q, 18N05A20P03K, 18N05A20K18A, 18N05A20K03Q, 18N05A20P13W, 18N05A20P13R, 18N05A20K08R, 18N05A20P13X, 18N05A20P13C, 18N05A20P08M, 18N05A20P03X, 18N05A20P03S, 18N05A20K23X, 18N05A20K23H, 18N05A20K08S, 18N05A20P13D, 18N05A20K23T, 18N05A20K23I, 18N05A20K23D, 18N05A20K18T, 18N05A20K18N, 18N05A20K13Y, 18N05A20K03T, 18N05A20P03J, 18N05A20P03E, 18N05A20P19F, 18N05A20P14V, 18N05A20P14A, 18N05A20P09A, 18N05A20K24V, 18N05A20K19Q, 18N05A20K19K, 18N05A20P14G, 18N05A20P09R, 18N05A20P14X, 18N05A20P14I, 18N05A20K24T, 18N05A20K24C, 18N05A20K19S, 18N05A20K19M, 18N05A20K09D, 18N05A20P09Z, 18N05A20P09U, 18N05A20P04U, 18N05A20K24P, 18N05A20K14E, 18N05A20K04U, 18N05A20K04E, 18N05A20P25K, 18N05A20P20K, 18N05A20P15Q, 18N05A20P15F, 18N05A20P15A, 18N05A20K25Q, 18N05A20K05F, 18N05A20K05A, 18N05A20P25B, 18N05A20P15L, 18N05A20P15G, 18N05A20P05R, 18N05A20K25L, 18N05A20K20W, 18N05A20K20R, 18N05A20K20B, 18N05A20K10W, 18N05A20P15C, 18N05A20K15S, 18N05A20K15C, 18N05A20K10X, 18N05A20P25D, 18N05A20P20I, 18N05A20P20D, 18N05A20P05T, 18N05A20K20T, 18N05A20K10Y, 18N05A20K10N, 18N05A20K10D, 18N05A20P20U, 18N05A20P15E, 18N05A20P05Z, 18N05A20P05P, 18N05A20K10J, 18N05A20K05Z, 18N05A20Q11K, 18N05A20Q01A, 18N05A20L06V, 18N05A20Q11L, 18N05A20L21W, 18N05A20L16R, 18N05A20L11W, 18N05A20L06G, 18N05A20Q11S, 18N05A20Q11M, 18N05A20Q06M, 18N05A20L16M, 18N05A20L01S, 18N05A20L01M, 18N05A20L21N, 18N05A20L21P, 18N05A20L21J, 18N05A20L16I, 18N05A20L06E, 18N05A20L01Z, 18N05A20Q02Q, 18N05A20Q02K, 18N05A20L22Q, 18N05A20L12F, 18N05A20L07K, 18N05A20L02F, 18N05A20Q02L, 18N05A20Q02B, 18N05A20L17L, 18N05A20L02G, 18N05A20L22X, 18N05A20L07S, 18N05A20L02C, 18N05A20Q02N, 18N05A20L22T, 18N05A20L22I, 18N05A20L17I, 18N05A20L12D, 18N05A20L07T, 18N05A20L22U, 18N05A20L22P, 18N05A20L23Q, 18N05A20L13A, 18N05A20L08K, 18N05A20L08A, 18N05A20L03Q, 18N05A20Q03L, 18N05A20Q03G, 18N05A20L23W, 18N05A20L23R, 18N05A20L18R, 18N05A20L13W, 18N05A20L03B, 18N05A20L23H, 18N05A20L18H, 18N05A20L08C, 18N05A20L03X, 18N05A20L18N, 18N05A20L18I, 18N05A20L13T, 18N05A20L13N, 18N05A20L08Y, 18N05A20L03J, 18N05A20L03E, 18N05A20Q04G, 18N05A20Q04B, 18N05A20L14W, 18N05A20L14L, 18N05A20Q04M, 18N05A20L24S, 18N05A20L09S, 18N05A20L04X, 18N05A20L04S, 18N05A20L04M, 18N05A20L09Y, 18N05A20L09T, 18N05A20L10V, 18N05A20L10Q, 18N05A20L10A, 18N05A20Q05G, 18N05A20L05R, 18N05A20L25S, 18N05A20L10S, 18N05A20L10C, 18N05A20Q05N, 18N05A20L25N, 18N05A20L05N, 18N05A20L05I, 18N05A20L25P, 18N05A20L20J, 18N05A20L10P, 18N05A20L05U, 18N05B16I21F, 18N05B16I16V, 18N05B16I11W, 18N05B16I11A, 18N05B16I06F, 18N05B16I06B, 18N05B16I01Q, 18N05B16M01C, 18N05B16I21X, 18N05B16I21N, 18N05B16I11T, 18N05B16I01T, 18N05B16M01J, 18N05B16I16U, 18N05B16I11Z, 18N05B16I11P, 18N05B16I06E, 18N05B16I01U, 18N05B16I01E, 18N05B16M02G, 18N05B16I02R, 18N05B16M02H, 18N05B16I22S, 18N05B16I22C, 18N05B16I17M, 18N05B16I07S, 18N05B16I02M, 18N05B16I17Y, 18N05B16I12Y, 18N05B16I07Y, 18N05B16I07N, 18N05B16I02Y, 18N05B16I17U, 18N05B16I17E, 18N05B16I12J, 18N05B16I07Z, 18N05B16I07J, 18N05B16I02U, 18N05B16M03K, 18N05B16M03F, 18N05B16I23V, 18N05B16I18Q, 18N05B16I08V, 18N05B16I03A, 18N05B16I23G, 18N05B16I13S, 18N05B16I13M, 18N05B16I13G, 18N05B16I08C, 18N05B16I03B, 18N05B16I13T, 18N05B16I08T, 18N05B16I08N, 18N05B16I03T, 18N05B16I03D, 18N05B16M03P, 18N05B16I18U, 18N05B16I18E, 18N05B16I08Z, 18N05B16I08E, 18N05B16I04F, 18N05B16I04A, 18N05B16M04B, 18N05B16I24G, 18N05B16I19L, 18N05B16I09W, 18N05B16I19C, 18N05B16I04H, 18N05B16M04N, 18N05B16M04I, 18N05B16M04D, 18N05B16I24I, 18N05B16I09T, 18N05B16I25F, 18N05B16I20V, 18N05B16I10K, 18N05B16I25L, 18N05B16I20W, 18N05B16I15W, 18N05B16I15L, 18N05B16I05L, 18N05B16I05B, 18N05B16I25I, 18N05B16I10Y, 18N05B16I10N, 18N05B16I10H, 18N05A20P16A, 18N05A20K16F, 18N05A20P06B, 18N05A20P01L, 18N05A20P01B, 18N05A20P11M, 18N05A20P01H, 18N05A20P01C, 18N05A20K21X, 18N05A20K21C, 18N05A20K16M, 18N05A20K11H, 18N05A20K01S, 18N05A20P16I, 18N05A20P06T, 18N05A20P01I, 18N05A20K21N, 18N05A20K16N, 18N05A20K11D, 18N05A20P11J, 18N05A20P06E, 18N05A20K21Z, 18N05A20K06U, 18N05A20P17K, 18N05A20P17F, 18N05A20P12Q, 18N05A20P12K, 18N05A20P07V, 18N05A20P17L, 18N05A20P17C, 18N05A20P12G, 18N05A20P12H, 18N05A20K17X, 18N05A20K12R, 18N05A20K07M, 18N05A20P02T, 18N05A20P02I, 18N05A20K22Y, 18N05A20K22N, 18N05A20K12Y, 18N05A20P07E, 18N05A20P02Z, 18N05A20K12Z, 18N05A20K12U, 18N05A20K23V, 18N05A20K23K, 18N05A20K18V, 18N05A20K13K, 18N05A20K08F, 18N05A20K03V, 18N05A20P18B, 18N05A20P03R, 18N05A20K23B, 18N05A20P13S, 18N05A20K03C, 18N05A20P08D, 18N05A20P03D, 18N05A20K18I, 18N05A20K13T, 18N05A20K03I, 18N05A20P08Z, 18N05A20P08P, 18N05A20K23E, 18N05A20K13Z, 18N05A20K08J, 18N05A20P04V, 18N05A20K24K, 18N05A20K19F, 18N05A20K04F, 18N05A20P19G, 18N05A20K19B, 18N05A20K14L, 18N05A20K09L, 18N05A20P14Y, 18N05A20P14S, 18N05A20P09S, 18N05A20P09N, 18N05A20P09I, 18N05A20K24M, 18N05A20K24I, 18N05A20K19N, 18N05A20K19H, 18N05A20K14X, 18N05A20K14T, 18N05A20K14I, 18N05A20K14D, 18N05A20K09C, 18N05A20K04H, 18N05A20K04C, 18N05A20P24E, 18N05A20P19E, 18N05A20P14P, 18N05A20P14J, 18N05A20K19P, 18N05A20K09Z, 18N05A20P10A, 18N05A20K20Q, 18N05A20K20A, 18N05A20P25G, 18N05A20P15B, 18N05A20P05B, 18N05A20K15R, 18N05A20K15B, 18N05A20P15S, 18N05A20P10C, 18N05A20K20X, 18N05A20K20M, 18N05A20P10N, 18N05A20P05I, 18N05A20K25Y, 18N05A20K25I, 18N05A20K15Z, 18N05A20K15E, 18N05A20Q16F, 18N05A20Q11V, 18N05A20Q01V, 18N05A20L11F, 18N05A20L11A, 18N05A20L06K, 18N05A20L01Q, 18N05A20Q11W, 18N05A20Q11B, 18N05A20Q06W, 18N05A20Q06R, 18N05A20Q06G, 18N05A20L16W, 18N05A20L16B, 18N05A20L01L, 18N05A20Q06C, 18N05A20L21M, 18N05A20L16S, 18N05A20L16H, 18N05A20L11C, 18N05A20L06X, 18N05A20L06S, 18N05A20L01X, 18N05A20Q06T, 18N05A20Q06N, 18N05A20Q01Y, 18N05A20L21T, 18N05A20L16Z, 18N05A20L16U, 18N05A20L11Z, 18N05A20L11E, 18N05A20L06T, 18N05A20L06I, 18N05A20L01J, 18N05A20Q02A, 18N05A20L12Q, 18N05A20L17R, 18N05A20L17B, 18N05A20L12B, 18N05A20L02L, 18N05A20L22H, 18N05A20L12X, 18N05A20L12H, 18N05A20L07C, 18N05A20L02X, 18N05A20L02H, 18N05A20L17D, 18N05A20L12I, 18N05A20L02D, 18N05A20Q02P, 18N05A20Q03F, 18N05A20L23K, 18N05A20L13V, 18N05A20L08V, 18N05A20L08F, 18N05A20L18W, 18N05A20L18B, 18N05A20L03R, 18N05A20L03G, 18N05A20L23M, 18N05A20Q03N, 18N05A20L23Y, 18N05A20L18Y, 18N05A20L13Y, 18N05A20L08I, 18N05A20Q03P, 18N05A20Q04K, 18N05A20L24A, 18N05A20L19A, 18N05A20L13Z, 18N05A20L13P, 18N05A20L08P, 18N05A20L08E, 18N05A20L19R, 18N05A20L19G, 18N05A20L09W, 18N05A20L04W, 18N05A20L04R, 18N05A20L14C, 18N05A20L09H, 18N05A20L24Y, 18N05A20L19D, 18N05A20L14N, 18N05A20L14I, 18N05A20L14D, 18N05A20L24Z, 18N05A20L19P, 18N05A20L19J, 18N05A20L04U, 18N05A20L04P, 18N05A20L04J, 18N05A20L25Q, 18N05A20L25A, 18N05A20L15A, 18N05A20L10F, 18N05A20L15G, 18N05A20L10W, 18N05A20L10L, 18N05A20L05L, 18N05A20L25M, 18N05A20L25C, 18N05A20L20S, 18N05A20L15X, 18N05A20L05X, 18N05A20L20D, 18N05A20L15N, 18N05A20L15D, 18N05A20L20Z, 18N05A20L20E, 18N05A20L15J, 18N05A20L10E, 18N05B16M01K, 18N05B16M01B, 18N05B16I21B, 18N05B16I16K, 18N05B16I06K, 18N05B16M01H, 18N05B16I11C, 18N05B16I06M, 18N05B16I06C, 18N05B16I21T, 18N05B16I16D, 18N05B16I01D, 18N05B16I16E, 18N05B16I06P, 18N05B16I22A, 18N05B16I17V, 18N05B16I12A, 18N05B16I07V, 18N05B16I07F, 18N05B16I02V, 18N05B16I17R, 18N05B16I17B, 18N05B16I07L, 18N05B16I02L, 18N05B16M02M, 18N05B16I02C, 18N05B16I12T, 18N05B16I07I, 18N05B16I07D, 18N05B16I02N, 18N05B16I22Z, 18N05B16I12U, 18N05B16I12E, 18N05B16I23K, 18N05B16I18A, 18N05B16I13Q, 18N05B16I13A, 18N05B16I08Q, 18N05B16I03V, 18N05B16I03K, 18N05B16I23H, 18N05B16I18R, 18N05B16I18H, 18N05B16I13B, 18N05B16I08S, 18N05B16I23T, 18N05B16I08D, 18N05B16I23Z, 18N05B16I23E, 18N05B16I08J, 18N05B16I03J, 18N05B16I03E, 18N05B16I24Q, 18N05B16I19F, 18N05B16I09G, 18N05B16I04W, 18N05B16I24X, 18N05B16I24M, 18N05B16I14H, 18N05B16I14C, 18N05B16I09X, 18N05B16I04X, 18N05B16I04S, 18N05B16I04Y, 18N05B16I04T, 18N05B16I24Z, 18N05B16I19P, 18N05B16I19E, 18N05B16I25Q, 18N05B16I25W, 18N05B16I25R, 18N05B16I20R, 18N05B16I10L, 18N05B16I10G, 18N05B16M05I, 18N05B16I25H, 18N05B16I15X, 18N05B16I15T, 18N05B16I15N, 18N05B16I15D, 18N05B16I10X, 18N05B16I10T, 18N05B16I10M, 18N05B16I10I, 18N05B16I10D, 18N05B16I05M, 18N05B16I05I, 18N05A20P16K, 18N05A20P11Q, 18N05A20P06F, 18N05A20K06V, 18N05A20P11R, 18N05A20P11G, 18N05A20P06G, 18N05A20K16R, 18N05A20K11L, 18N05A20K01G, 18N05A20P11C, 18N05A20K21M, 18N05A20K11X, 18N05A20K11M, 18N05A20P06Y, 18N05A20P01N, 18N05A20K16D, 18N05A20K11I, 18N05A20K06Y, 18N05A20K11U, 18N05A20P07K, 18N05A20K17A, 18N05A20P07W, 18N05A20P07L, 18N05A20P07H, 18N05A20P07B, 18N05A20P02L, 18N05A20P02H, 18N05A20P02B, 18N05A20K22S, 18N05A20K22M, 18N05A20K12X, 18N05A20K12C, 18N05A20K07X, 18N05A20K02X, 18N05A20K02H, 18N05A20P07Y, 18N05A20P02Y, 18N05A20K22T, 18N05A20K17I, 18N05A20K12T, 18N05A20K07T, 18N05A20P17P, 18N05A20P07J, 18N05A20P02U, 18N05A20K22U, 18N05A20K17P, 18N05A20K07U, 18N05A20K02Z, 18N05A20P13V, 18N05A20P08F, 18N05A20P03A, 18N05A20K18K, 18N05A20K08K, 18N05A20P13G, 18N05A20P03B, 18N05A20K23G, 18N05A20K18L, 18N05A20K13L, 18N05A20K13G, 18N05A20K08L, 18N05A20K03R, 18N05A20P13M, 18N05A20P13H, 18N05A20P08X, 18N05A20P08H, 18N05A20P03C, 18N05A20K18X, 18N05A20K18H, 18N05A20K03H, 18N05A20P03Y, 18N05A20K18D, 18N05A20K13N, 18N05A20K08I, 18N05A20P08U, 18N05A20K18E, 18N05A20K08U, 18N05A20K08P, 18N05A20K08E, 18N05A20K03Z, 18N05A20K03U, 18N05A20K03P, 18N05A20P19K, 18N05A20K24F, 18N05A20K14V, 18N05A20K09K, 18N05A20K04A, 18N05A20P14L, 18N05A20P09B, 18N05A20P04G, 18N05A20K09R, 18N05A20P09H, 18N05A20P04X, 18N05A20P04S, 18N05A20P04D, 18N05A20K24S, 18N05A20K24Y, 18N05A20K14C, 18N05A20K09X, 18N05A20K09H, 18N05A20K04Y, 18N05A20K04T, 18N05A20K04N, 18N05A20P24U, 18N05A20P24J, 18N05A20P14U, 18N05A20P14E, 18N05A20P04E, 18N05A20K24Z, 18N05A20P25A, 18N05A20P20V, 18N05A20P10V, 18N05A20P10F, 18N05A20P05F, 18N05A20K25F, 18N05A20K15Q, 18N05A20K10K, 18N05A20P25L, 18N05A20P20G, 18N05A20P10R, 18N05A20K25R, 18N05A20K10G, 18N05A20P15X, 18N05A20P10X, 18N05A20K15M, 18N05A20K15H, 18N05A20K05S, 18N05A20P20N, 18N05A20P15Y, 18N05A20P15T, 18N05A20P15N, 18N05A20K25T, 18N05A20K05Y, 18N05A20K05I, 18N05A20P15Z, 18N05A20K25J, 18N05A20K25E, 18N05A20K15U, 18N05A20K10Z, 18N05A20K10E, 18N05A20K05E, 18N05A20Q06K, 18N05A20L21K, 18N05A20L11Q, 18N05A20Q16B, 18N05A20Q11G, 18N05A20Q06B, 18N05A20L21G, 18N05A20L16L, 18N05A20L01W, 18N05A20L06C, 18N05A20Q01Z, 18N05A20Q01T, 18N05A20Q01P, 18N05A20L21Z, 18N05A20L21E, 18N05A20L11T, 18N05A20L22A, 18N05A20L12V, 18N05A20L07F, 18N05A20L02V, 18N05A20Q02G, 18N05A20L07W, 18N05A20L07R, 18N05A20Q02H, 18N05A20Q02C, 18N05A20L17X, 18N05A20L17S, 18N05A20L07H, 18N05A20L12Y, 18N05A20L12Z, 18N05A20L12E, 18N05A20L07Z, 18N05A20L02U, 18N05A20L13F, 18N05A20L03A, 18N05A20L08B, 18N05A20L03W, 18N05A20L08H, 18N05A20L03H, 18N05A20L23I, 18N05A20L03T, 18N05A20L23Z, 18N05A20L23U, 18N05A20L24V, 18N05A20L23J, 18N05A20L23E, 18N05A20L18U, 18N05A20L18E, 18N05A20L14V, 18N05A20L08U, 18N05A20L09K, 18N05A20L08J, 18N05A20L03Z, 18N05A20L04V, 18N05A20L04K, 18N05A20L14R, 18N05A20Q04H, 18N05A20L09M, 18N05A20L09C, 18N05A20L04T, 18N05A20L04D, 18N05A20L14P, 18N05A20L14E, 18N05A20L04Z, 18N05A20Q05F, 18N05A20L20F, 18N05A20L15Q, 18N05A20L05K, 18N05A20L25L, 18N05A20L20R, 18N05A20L15W, 18N05A20L10R, 18N05A20L25H, 18N05A20L15H, 18N05A20L10M, 18N05A20L05S, 18N05A20L25I, 18N05A20L20T, 18N05A20L15Z, 18N05A20L10Z, 18N05A20L10J, 18N05B16M01L, 18N05B16M01A, 18N05B16I16Q, 18N05B16I16F, 18N05B16I11V, 18N05B16I11K, 18N05B16I06V, 18N05B16M01M, 18N05B16I21S, 18N05B16I11X, 18N05B16I06X, 18N05B16I06S, 18N05B16M01I, 18N05B16I06Y, 18N05B16I06T, 18N05B16I06D, 18N05B16I21Z, 18N05B16I21U, 18N05B16I21J, 18N05B16I11U, 18N05B16I01P, 18N05B16I01J, 18N05B16M02K, 18N05B16M02F, 18N05B16I22V, 18N05B16I22F, 18N05B16I07A, 18N05B16I02Q, 18N05B16I22G, 18N05B16I17L, 18N05B16I12W, 18N05B16I02G, 18N05B16I07C, 18N05B16M02N, 18N05B16I22I, 18N05B16I17N, 18N05B16I12N, 18N05B16I02I, 18N05B16I22E, 18N05B16I17Z, 18N05B16I17P, 18N05B16I12Z, 18N05B16I07E, 18N05B16I02Z, 18N05B16M03A, 18N05B16I08K, 18N05B16I23B, 18N05B16I18S, 18N05B16I18L, 18N05B16I13R, 18N05B16I03W, 18N05B16I03S, 18N05B16I18Y, 18N05B16I13Y, 18N05B16I03N, 18N05B16I18Z, 18N05B16I13E, 18N05B16I03Z, 18N05B16I24A, 18N05B16I09V, 18N05B16M04L, 18N05B16I19R, 18N05B16I19G, 18N05B16I09R, 18N05B16I04G, 18N05B16I04B, 18N05B16I19H, 18N05B16I14M, 18N05B16I09H, 18N05B16I09C, 18N05B16I24N, 18N05B16I19Y, 18N05B16I14N, 18N05B16I09Y, 18N05B16I09I, 18N05B16I04N, 18N05B16M04P, 18N05B16I19J, 18N05B16I14J, 18N05B16I04E, 18N05B16I25A, 18N05B16I15Q, 18N05B16I15F, 18N05B16I10V, 18N05B16I10Q, 18N05B16I05Q, 18N05B16I20L, 18N05B16M05C, 18N05B16I25S, 18N05B16I20X, 18N05B16I20T, 18N05B16I20N, 18N05B16I15Y, 18N05B16I10C, 18N05B16I05D"],
                    77
                );
            }else if (Band == 3) {
                MonitorearAreas(
                    "",
                    1,
                    "",
                    [""],
                    77
                );
            }else if (Band == 4) {
                MonitorearAreas(
                    "",
                    1,
                    "",
                    [""],
                    77
                );
            }




            // SE ACCEDE A CADA UNA DE LA INFORMACIÓN RETORNADA EN LA FUNCIÓN MonitorearAreas PARA UTILIZARLA MÁS ADELANTE EN OTROS PROCEOS
            IdArea = DetallesCompletos.IdArea;
            Aviso = DetallesCompletos.Aviso;
            Celda = DetallesCompletos.Celda;
            Area = DetallesCompletos.Area;
            Comas = DetallesCompletos.Comas;

            const continCeldas = await page.$x('//span[contains(.,"Continuar")]');
            await page.waitForTimeout(1000);
            await continCeldas[1].click();
            console.log(IdArea);
            await page.waitForTimeout(2000);

            const Todoslosparametros = await page.$$eval("span", links =>
                links.map(link => link.textContent)
            );
            var cont = 1;
            for (let i = 0; i < Todoslosparametros.length; i++) {
                const elemento = Todoslosparametros[i];
                if (elemento == "Vea los errores a continuación (dentro de las pestañas):") {
                    cont = 0;
                }

            }
            const FechaReapertura = await page.$$eval("a", links =>
                links.map(link => link.textContent)
            );
            var Reapertura = 0;
            //EL DIA DE MAÑANA 12 04 2022 SE REALIZARA LA PRUEBA
            //PARA ASI VALIDAR CUANDO APAREZCA ALGO DIFERENTE A "Las siguientes celdas de selección no están disponibles:"

            for (let i = 0; i < FechaReapertura.length; i++) {


                var Text = FechaReapertura[i].substring(24, 120);
                if (Text == "Las siguientes celdas de selección no están disponibles ya que la fecha de reapertura es futura:") {
                    console.log("Lo encontre");
                    Reapertura = 1;
                    contreapertura++;
                    if (contreapertura < 2) {
                        Correo(3, IdArea, Celda);
                    }


                    console.log(contreapertura);
                } else {
                    var Text = FechaReapertura[i].substring(24, 140);
                }

            }




            if (cont == "0") {
                console.log("Limpio El campo del area");
                page.evaluate(() => {
                    document.querySelector('[id="cellIdsTxtId"]').value = "";
                });
                Band++;
                //Este es la cantidad de areas mas 1
                if (Band == 2) {
                    Band = 1;
                }

            } else {
                Band = 99;
            }
            console.log("limpia el timer");
            clearTimeout(TimeArea);
        }



        console.log("ahhh se salio Y_Y ");
        var bandera = 0;

        let TimeNOpaso = setTimeout(() => {
            bandera = 99;
            console.log("ENTRO EN EL TimeNOpaso");
            page.close();
            Mineria(browser,  Pin);
        }, 20000);

        console.log(page.url());

        while (bandera != 99) {



            await page.waitForTimeout(500);
            console.log(page.url());
            if (page.url() == 'https://annamineria.anm.gov.co/sigm/index.html#/p_CaaIataInputTechnicalEconomicalDetails') {
                bandera = 99;

                console.log("Si cargo la pagina  ");
                clearTimeout(TimeNOpaso);
            } else {

                console.log("Nada no la carga ");
            }



        }



        clearTimeout(TimeNOpaso);









        const continDetallesdelArea2 = await page.$x('//a[contains(.,"área")]');
        await continDetallesdelArea2[4].click();

        const grupoEtnicoYN = await page.$('input[value="N"]');
        await grupoEtnicoYN.click();


        const btnInfoTecnica = await page.$x('//a[contains(.,"Información t")]');
        await btnInfoTecnica[0].click();

        //CORREO LIBERADA
        Correo(1, IdArea, Celda);


        let RadiPrimero = setTimeout(() => {

            // console.log("ENTRO EN EL RadiPrimero");
            // page.close();
            // Mineria(browser,  Pin);


        }, 30000);

        await page.evaluate(() => {

            document.querySelector('[id="yearOfExecutionId0"]').value = 'number:1'

            angular.element(document.getElementById('yearOfExecutionId0')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId0"]').value = 'number:2'

            angular.element(document.getElementById('yearOfDeliveryId0')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId0"]').value = 'IIG'

            angular.element(document.getElementById('laborSuitabilityId0')).triggerHandler('change');

            //Contactos con la comunidad y enfoque social

            document.querySelector('[id="yearOfExecutionId1"]').value = 'number:1'

            angular.element(document.getElementById('yearOfExecutionId1')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId1"]').value = 'number:2'

            angular.element(document.getElementById('yearOfDeliveryId1')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId1"]').value = 'TSCA'

            angular.element(document.getElementById('laborSuitabilityId1')).triggerHandler('change');

            //Base topográfica del área

            document.querySelector('[id="yearOfExecutionId2"]').value = 'number:1'

            angular.element(document.getElementById('yearOfExecutionId2')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId2"]').value = 'number:2'

            angular.element(document.getElementById('yearOfDeliveryId2')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId2"]').value = 'IIG'

            angular.element(document.getElementById('laborSuitabilityId2')).triggerHandler('change');

            //Cartografía geológica

            document.querySelector('[id="yearOfExecutionId3"]').value = 'number:1'

            angular.element(document.getElementById('yearOfExecutionId3')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId3"]').value = 'number:2'

            angular.element(document.getElementById('yearOfDeliveryId3')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId3"]').value = 'IIG'

            angular.element(document.getElementById('laborSuitabilityId3')).triggerHandler('change');

            //Excavación de trincheras y apiques

            document.querySelector('[id="yearOfExecutionId4"]').value = 'number:2'

            angular.element(document.getElementById('yearOfExecutionId4')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId4"]').value = 'number:2'

            angular.element(document.getElementById('yearOfDeliveryId4')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId4"]').value = 'IIG'

            angular.element(document.getElementById('laborSuitabilityId4')).triggerHandler('change');

            //Geoquímica y otros análisis

            document.querySelector('[id="yearOfExecutionId5"]').value = 'number:2'

            angular.element(document.getElementById('yearOfExecutionId5')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId5"]').value = 'number:2'

            angular.element(document.getElementById('yearOfDeliveryId5')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId5"]').value = 'IIG'

            angular.element(document.getElementById('laborSuitabilityId5')).triggerHandler('change');

            //Geofísica

            document.querySelector('[id="yearOfExecutionId6"]').value = 'number:2'

            angular.element(document.getElementById('yearOfExecutionId6')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId6"]').value = 'number:2'

            angular.element(document.getElementById('yearOfDeliveryId6')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId6"]').value = 'IIG'

            angular.element(document.getElementById('laborSuitabilityId6')).triggerHandler('change');

            //Estudio de dinámica fluvial del cauce

            document.querySelector('[id="yearOfExecutionId7"]').value = 'number:2'

            angular.element(document.getElementById('yearOfExecutionId7')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId7"]').value = 'number:2'

            angular.element(document.getElementById('yearOfDeliveryId7')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId7"]').value = 'IIG'

            angular.element(document.getElementById('laborSuitabilityId7')).triggerHandler('change');

            // Características hidrológicas y sedimentológicas del cauce

            document.querySelector('[id="yearOfExecutionId8"]').value = 'number:2'

            angular.element(document.getElementById('yearOfExecutionId8')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId8"]').value = 'number:2'

            angular.element(document.getElementById('yearOfDeliveryId8')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId8"]').value = 'IIG'

            angular.element(document.getElementById('laborSuitabilityId8')).triggerHandler('change');

            //Pozos y Galerías Exploratorias

            document.querySelector('[id="yearOfExecutionId9"]').value = 'number:2'

            angular.element(document.getElementById('yearOfExecutionId9')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId9"]').value = 'number:2'

            angular.element(document.getElementById('yearOfDeliveryId9')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId9"]').value = 'IIG'

            angular.element(document.getElementById('laborSuitabilityId9')).triggerHandler('change');

            //Perforaciones profundas

            document.querySelector('[id="yearOfExecutionId10"]').value = 'number:2'

            angular.element(document.getElementById('yearOfExecutionId10')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId10"]').value = 'number:2'

            angular.element(document.getElementById('yearOfDeliveryId10')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId10"]').value = 'IIG'

            angular.element(document.getElementById('laborSuitabilityId10')).triggerHandler('change');

            //Muestreo y análisis de calidad

            document.querySelector('[id="yearOfExecutionId11"]').value = 'number:2'

            angular.element(document.getElementById('yearOfExecutionId11')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId11"]').value = 'number:2'

            angular.element(document.getElementById('yearOfDeliveryId11')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId11"]').value = 'IIG'

            angular.element(document.getElementById('laborSuitabilityId11')).triggerHandler('change');

            //Estudio geotécnico

            document.querySelector('[id="yearOfExecutionId12"]').value = 'number:2'

            angular.element(document.getElementById('yearOfExecutionId12')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId12"]').value = 'number:2'

            angular.element(document.getElementById('yearOfDeliveryId12')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId12"]').value = 'IIG'

            angular.element(document.getElementById('laborSuitabilityId12')).triggerHandler('change');

            //Estudio Hidrológico

            document.querySelector('[id="yearOfExecutionId13"]').value = 'number:2'

            angular.element(document.getElementById('yearOfExecutionId13')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId13"]').value = 'number:2'

            angular.element(document.getElementById('yearOfDeliveryId13')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId13"]').value = 'IIG'

            angular.element(document.getElementById('laborSuitabilityId13')).triggerHandler('change');

            //Estudio Hidrogeológico

            document.querySelector('[id="yearOfExecutionId14"]').value = 'number:2'

            angular.element(document.getElementById('yearOfExecutionId14')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId14"]').value = 'number:2'

            angular.element(document.getElementById('yearOfDeliveryId14')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId14"]').value = 'IIG'

            angular.element(document.getElementById('laborSuitabilityId14')).triggerHandler('change');

            //Evaluación del modelo geológico

            document.querySelector('[id="yearOfExecutionId15"]').value = 'number:3'

            angular.element(document.getElementById('yearOfExecutionId15')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId15"]').value = 'number:3'

            angular.element(document.getElementById('yearOfDeliveryId15')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId15"]').value = 'IIG'

            angular.element(document.getElementById('laborSuitabilityId15')).triggerHandler('change');

            //Actividades exploratorias adicionales (Se describe en el anexo Tecnico que se allegue)

            document.querySelector('[id="yearOfExecutionId16"]').value = 'number:3'

            angular.element(document.getElementById('yearOfExecutionId16')).triggerHandler('change');

            document.querySelector('[id="yearOfDeliveryId16"]').value = 'number:3'

            angular.element(document.getElementById('yearOfDeliveryId16')).triggerHandler('change');

            document.querySelector('[id="laborSuitabilityId16"]').value = 'IIG'

            angular.element(document.getElementById('laborSuitabilityId16')).triggerHandler('change');



            // Actividades Ambientales etapa de exploración


            //Selección optima de Sitios de Campamentos y Helipuertos

            angular.element(document.getElementById('envYearOfDeliveryId0')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId0"]').value = 'MULT'

            angular.element(document.getElementById('envLaborSuitabilityId0')).triggerHandler('change');

            //Manejo de Aguas Lluvias


            angular.element(document.getElementById('envYearOfDeliveryId1')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId1"]').value = 'MULT'

            angular.element(document.getElementById('envLaborSuitabilityId1')).triggerHandler('change');

            //Manejo de Aguas Residuales Domesticas


            angular.element(document.getElementById('envYearOfDeliveryId2')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId2"]').value = 'MULT'

            angular.element(document.getElementById('envLaborSuitabilityId2')).triggerHandler('change');

            //Manejo de Cuerpos de Agua

            angular.element(document.getElementById('envYearOfDeliveryId3')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId3"]').value = 'MULT'

            angular.element(document.getElementById('envLaborSuitabilityId3')).triggerHandler('change');

            //Manejo de Material Particulado y Gases


            angular.element(document.getElementById('envYearOfDeliveryId4')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId4"]').value = 'MULT'

            angular.element(document.getElementById('envLaborSuitabilityId4')).triggerHandler('change');

            //Manejo del Ruido


            angular.element(document.getElementById('envYearOfDeliveryId5')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId5"]').value = 'MULT'

            angular.element(document.getElementById('envLaborSuitabilityId5')).triggerHandler('change');

            // Manejo de Combustibles

            angular.element(document.getElementById('envYearOfDeliveryId6')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId6"]').value = 'MULT'

            angular.element(document.getElementById('envLaborSuitabilityId6')).triggerHandler('change');

            //Manejo de Taludes


            angular.element(document.getElementById('envYearOfDeliveryId7')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId7"]').value = 'MULT'

            angular.element(document.getElementById('envLaborSuitabilityId7')).triggerHandler('change');

            //Manejo de Accesos


            angular.element(document.getElementById('envYearOfDeliveryId8')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId8"]').value = 'MULT'

            angular.element(document.getElementById('envLaborSuitabilityId8')).triggerHandler('change');

            // Manejo de Residuos Solidos

            angular.element(document.getElementById('envYearOfDeliveryId9')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId9"]').value = 'MULT'

            angular.element(document.getElementById('envLaborSuitabilityId9')).triggerHandler('change');

            //Adecuación y Recuperación de Sitios de Uso Temporal


            angular.element(document.getElementById('envYearOfDeliveryId10')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId10"]').value = 'MULT'

            angular.element(document.getElementById('envLaborSuitabilityId10')).triggerHandler('change');

            //Manejo de Fauna y Flora


            angular.element(document.getElementById('envYearOfDeliveryId11')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId11"]').value = 'IFEB'

            angular.element(document.getElementById('envLaborSuitabilityId11')).triggerHandler('change');

            //Plan de Gestión Social


            angular.element(document.getElementById('envYearOfDeliveryId12')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId12"]').value = 'TSCA'

            angular.element(document.getElementById('envLaborSuitabilityId12')).triggerHandler('change');

            //capacitación de Personal


            angular.element(document.getElementById('envYearOfDeliveryId13')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId13"]').value = 'MULT'

            angular.element(document.getElementById('envLaborSuitabilityId13')).triggerHandler('change');

            //Contratación de Mano de Obra no Calificada


            angular.element(document.getElementById('envYearOfDeliveryId14')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId14"]').value = 'MULT'

            angular.element(document.getElementById('envLaborSuitabilityId14')).triggerHandler('change');

            //Rescate Arqueológico


            angular.element(document.getElementById('envYearOfDeliveryId15')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId15"]').value = 'ARQ'

            angular.element(document.getElementById('envLaborSuitabilityId15')).triggerHandler('change');

            //Manejo de Hundimientos


            angular.element(document.getElementById('envYearOfDeliveryId16')).triggerHandler('change');

            document.querySelector('[id="envLaborSuitabilityId16"]').value = 'MULT'

            angular.element(document.getElementById('envLaborSuitabilityId16')).triggerHandler('change');


        });

        // SELECCIÓN DE PROFESIONALES => CONTADOR(ES), GEÓLOGO(S), INGENIERO(S) GEÓLOGO(S), INGENIERO(S) DE MINAS
        // ==============================================================================
        console.log("INICIA LA SELECCIÓN DE LOS PROFESIONALES");
        console.log('================================================================');
        let profesionales = [
            { tipo: "Geólogo", nombres: ["Oscar Javier Pinilla Reyes (73619)"] },
            //  { tipo: "Ingeniero Geólogo", nombres: [""]},
            //  { tipo: "Ingeniero de Minas", nombres: [""]}
        ];

        await seleccionar_Profesional(profesionales, page, 1);

        // Hacer clic en el botón "Agregar"
        const addProfesional = await page.$x('//span[contains(.,"Agregar")]');
        await addProfesional[0].click();


        console.log('================================================================');
        console.log("FIN DE LA SELECCIÓN DE LOS PROFESIONALES");
        // =============================================================================

        // Acepta terminos y da clic en continuar
        await page.click('#technicalCheckboxId');
        const btnInfoEconomica = await page.$x('//a[contains(.,"Información eco")]');
        await btnInfoEconomica[0].click();

        // SELECCIÓN DEL CONTADOR
        // ==============================================================================
        console.log("INICIA LA SELECCIÓN DE CONTADOR(ES)");
        console.log('================================================================');
        let Contador_es = [
            { tipo: "Contador", nombres: ["Daniela Celeste Bracho Raleigh (88876)"] },
        ];

        await seleccionar_Profesional(Contador_es, page, 2);

        console.log('================================================================');
        console.log("FIN DE LA SELECCIÓN DE CONTADOR(ES)");
        // ==============================================================================

        // SELECCIÓN DE LOS VALORES
        // ==============================================================================
        await page.waitForSelector('#personClassificationId0');
        await page.select('#personClassificationId0', 'PJ');
        await page.evaluate(() => {


            // Check
            // document.querySelector('Input[id="declareIndId0"]').click();

            //Valores
            // document.getElementById('currentAssetId0').value = '42539369275' // OLD
            document.getElementById('activoCorrienteId0').value = '31049615000';

            angular.element(document.getElementById('activoCorrienteId0')).triggerHandler('change');

            // document.getElementById('currentLiabilitiesId0').value = '15184416062' // OLD
            document.getElementById('pasivoCorrienteId0').value = '7024772000';

            angular.element(document.getElementById('pasivoCorrienteId0')).triggerHandler('change');

            // document.getElementById('totalAssetId0').value = '48322540755' // OLD
            document.getElementById('activoTotalId0').value = '193966804000';

            angular.element(document.getElementById('activoTotalId0')).triggerHandler('change');

            // document.getElementById('totalLiabilitiesId0').value = '15401226207' // OLD
            document.getElementById('pasivoTotalId0').value = '7345458000';

            angular.element(document.getElementById('pasivoTotalId0')).triggerHandler('change');
        });
        // ==============================================================================





        const continPag4 = await page.$x('//span[contains(.,"Continuar")]');
        await continPag4[1].click();
        // Esperar la navegación
        await page.waitForNavigation({
            waitUntil: 'networkidle0',
            // timeout: 2000 // Ajusta el timeout según tus necesidades
        });
        clearTimeout(RadiPrimero);
        let Radisegundo = setTimeout(() => {

            console.log("ENTRO EN EL Radisegundo");
            //page.close();
            Mineria(browser,  Pin);


        }, 30000);




        console.timeEnd('Deteccion a adjuntar');
        const btncenti = await page.$x('//a[contains(.,"Certificac")]');
        await btncenti[0].click();

        // await page.waitForTimeout(200);
        console.log("Vamos aca");

        // await page.waitForTimeout(200);


        await page.waitForSelector(`#p_CaaCataEnvMandatoryDocumentToAttachId0`);
        const RutaDelArchivoo = `C:\\Aplicaciones\\Documentos\\${Empresa}\\Sheips\\${IdArea}.zip`;
        const ElementoControladorDeCargaaa = await page.$(`#p_CaaCataEnvMandatoryDocumentToAttachId0`);
        await ElementoControladorDeCargaaa.uploadFile(RutaDelArchivoo);


        console.log("YA ESCRIBIO a");

        // await page.waitForTimeout(1000);

        try {

            
            let ArchivoAmbiental ;
            if(IdArea == '509188'){
                 ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\509188.pdf`;
            }else if(IdArea == '503239'){
                ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\503239.pdf`;

            }else if(IdArea == 'RFE_08211'){
                ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\RFE_08211.pdf`;

            }else if(IdArea == 'RFE_08A'){
                ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\RFE_08A.pdf`;

            }else if(IdArea == 'RFE_08B'){
                ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\RFE_08B.pdf`;

            }else if(IdArea == 'Riosucio598' || IdArea == 'supia' || IdArea == 'supiaincompleto'){
                ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\QCO-08032.pdf`;

            }else if(IdArea == '507948sincelda'  ){
                ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\507948sincelda.pdf`;

            }else if(IdArea == '509136'  ){
                ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\509136.pdf`;

            }else if(IdArea == 'CollectiveCAG_141'  ){
                ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\CollectiveCAG_141.pdf`;

            }else if(IdArea == '697_17'  ){
                ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\697_17.pdf`;

            }else if(IdArea == '502172'  ){
                ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\502172.pdf`;

            }else if(IdArea == '671_17'  ){
                ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\671_17.pdf`;

            }else if(IdArea == '508353Inferior'  ){
                ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\508353Inferior.pdf`;

            }else if(IdArea == '508353Superior'  ){
                ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\508353Superior.pdf`;

            }else if(IdArea == '508359SUPERIOR'  ){
                ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\508359SUPERIOR.pdf`;

            }else if(IdArea == '508359INFERIOR'  ){
                ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\508359INFERIOR.pdf`;

            }
            else{
                 ArchivoAmbiental = `C:\\Aplicaciones\\Documentos\\${Empresa}\\CertificadoAmbiental\\Certificado_Ambiental.pdf`;

            }
            
            
            await page.waitForSelector(`#p_CaaCataEnvMandatoryDocumentToAttachId1`);
            const RutaDelArchivoo = ArchivoAmbiental;
            const ElementoControladorDeCargaaa = await page.$(`#p_CaaCataEnvMandatoryDocumentToAttachId1`);
            await ElementoControladorDeCargaaa.uploadFile(RutaDelArchivoo);



            // await page.waitForTimeout(300);
            await page.click('#acceptanceOfTermsId');
            console.log("Ahora Vamos aca 3333333");
            // await page.waitForTimeout(300);

            const btnDocuSopor = await page.$x('//a[contains(.,"Documentac")]');
            await btnDocuSopor[0].click();
            console.log("si llego");
            await page.waitForTimeout(300);


            console.log("INICIA PROCESO DE ADJUNTAR DOCUMENTOS REGLAMENTARIOS");
            console.log('================================================================');

            let Documentos = [
                "1. Aceptacion Del Profesional Para Refrendar Documentos Tecnicos.pdf",//1
                "2. Fotocopia Tarjeta Profesional.pdf",//2
                "4. Declaracion De Renta Proponente 1 Anio 1.pdf",//3
                "5. Declaracion De Renta Proponente 1 Anio 2.pdf",//4
                "6. Estados Financieros Propios Certificados Y O Dictaminados Proponente 1 Anio 1.pdf",//5
                "7. Estados Financieros Propios Certificados Y O Dictaminados Proponente 1 Anio 2.pdf",//6
                "8. Extractos Bancarios Proponente 1.pdf",//7
                "9. RUT.pdf",//8
                "10. Fotocopia Documento De Identificacion.pdf",//9
                "11. Certificado De Composicion Accionaria De La Sociedad.pdf",//10
                "12. Certificado De Existencia Y Representacion Legal.pdf",//11
                "13. Certificado Vigente De Antecedentes Disciplinarios.pdf",//12
                "14. Fotocopia Tarjeta Profesional Del Contador Revisor Fiscal.pdf",//13

            ];

            let ElementosFile = [
                "p_CaaCataMandatoryDocumentToAttachId0",//1
                "p_CaaCataMandatoryDocumentToAttachId1",//2
                "p_CaaCataMandatoryDocumentToAttachId3",//3
                "p_CaaCataMandatoryDocumentToAttachId4",//4
                "p_CaaCataMandatoryDocumentToAttachId5",//5
                "p_CaaCataMandatoryDocumentToAttachId6",//6
                "p_CaaCataMandatoryDocumentToAttachId7",//7
                "p_CaaCataMandatoryDocumentToAttachId8",//8
                "p_CaaCataMandatoryDocumentToAttachId9",//9
                "p_CaaCataMandatoryDocumentToAttachId10",//10
                  "p_CaaCataMandatoryDocumentToAttachId11",//11
                 "p_CaaCataMandatoryDocumentToAttachId12",//12
                "p_CaaCataMandatoryDocumentToAttachId13",//13
                // "p_CaaCataMandatoryDocumentToAttachId14"//14
            ];
                console.log(ElementosFile.length);
            try {
                for (let i = 0; i < ElementosFile.length; i++) {
                    try {
                        await page.waitForSelector(`#${ElementosFile[i]}`);
                        const RutaDelArchivo = `C:\\Aplicaciones\\Documentos\\${Empresa}\\DocumentosReglamentarios\\${Documentos[i]}`;
                        const ElementoControladorDeCarga = await page.$(`#${ElementosFile[i]}`);
                        await ElementoControladorDeCarga.uploadFile(RutaDelArchivo);

                        // Verificar si el archivo se cargó correctamente
                        console.log(`Archivo ${Documentos[i]} adjuntado correctamente.`);

                    } catch (error) {
                        console.log(`Error al cargar el archivo ${Documentos[i]}:`, error);

                        // Detener el bucle o manejar el error como sea necesario
                        throw new Error(`Error al cargar el archivo ${Documentos[i]}`);
                    }
                }
                console.log("sadas");
            } catch (error) {
                console.error('Error general al adjuntar archivos:', error);
            }

            console.log('================================================================');
            console.log('FINALIZA PROCESO DE ADJUNTAR DOCUMENTOS REGLAMENTARIOS');

            // await page.waitForTimeout(2000);

        } catch (error) {
            console.log('BOTO ERROR');
        }


        //CAPTURA DE PANTALLA
        await CapturaPantalla(page);
        const continPag = await page.$x('//span[contains(.,"Continuar")]');
        await continPag[1].click();
        await page.waitForNavigation({
            waitUntil: 'networkidle0',
        });
        console.log(" si navego ");



        //CAPTURA DE PANTALLA
        clearTimeout(Radisegundo);

        let RadiTercero = setTimeout(() => {

            console.log("ENTRO EN EL Radisegundo");
            //page.close();
            Mineria(browser,  Pin);
        }, 60000);



        const HacerClicEnSpanDocumentacionDeSoporte = await page.$x('//a[contains(.,"Documentac")]');
        await HacerClicEnSpanDocumentacionDeSoporte[0].click();
        const AparecioCaptcha = await page.waitForSelector('iframe[title="reCAPTCHA"]');
        if (AparecioCaptcha) {
            console.log("EL CAPTCHA YA ESTÁ DISPONIBLE");
            await page.waitForTimeout(500);
        } else {
            console.log("EL CAPTCHA NO ESTÁ DISPONIBLE");
        }

        for (let i = 0; i < 1; i+=1) {
            // await page.keyboard.press('Tab');
            await keyboard.pressKey(Key.Tab);
            console.log(`PRESIONÉ LA TABULADORA EN ITERACIÓN ${i}`);
        }

        await keyboard.pressKey(Key.Enter);

        // await page.waitForTimeout(1000000);


        while (true) {
            await page.waitForTimeout(1000);
            console.log("Chequeando si el captcha está resuelto...");

            const isCaptchaResolved = await page.evaluate(() => {
                const responseField = document.querySelector('#g-recaptcha-response');
                return responseField && responseField.value.length > 0;
            });

            if (isCaptchaResolved) {
                console.log('El captcha ha sido resuelto.');
                clearTimeout(RadiTercero);
                break;
            } else {
                console.log('El captcha no ha sido resuelto aún.');
            }
        }



        console.log('51. Bóton Radicar');

        const btnRadicar1 = await page.$x('//span[contains(.,"Radicar")]');
        console.log("Este es el boton radicar : " + btnRadicar1);

        //await page.waitForTimeout(4000);
        console.log("Le di click");

        try {
            await btnRadicar1[0].click();
        } catch (exepcion) {
            console.log("La pos 0 No fue ")
        }
        try {

            await btnRadicar1[1].click();
        } catch (exepcion) {
            console.log("La 1 tampoco Y_Y")
        }

        //CAPTURA DE PANTALLA
        await CapturaPantalla(page);
        //CORREO RADICACION
        Correo(2, IdArea, Celda);
        clearTimeout(Radisegundo);
        await page.waitForTimeout(180000);
        Mineria(browser,  Pin);







    })();
}


// FUNCIÓN PARA ENVÍO DE CORREO SEGÚN LA SITUACIÓN
function Correo(Tipo, Area, Celda) {
    // 1. Liberada 2. radicada 3. Fecha reapertura
    var msg = "";
    var Color = "";
    var Texto = "";
    //Area = "Tranquilos area de prueba";
    if (Tipo == 1) {
        msg = "¡¡¡Posible Area Liberada!!! " + EquipoActual + " " + Area + " " + Empresa;
        Color = "#4CAF50";
        Texto = "POSIBLE AREA LIBERADA";
    } else if (Tipo == 2) {
        msg = "¡¡¡Posible Area Radicada!!! " + EquipoActual + " " + Area + " " + Empresa;
        Color = "#D4AF37";
        Texto = "POSIBLE AREA RADICADA";
    } else if (Tipo == 3) {
        msg = "¡¡¡Area Con fecha de Reapertura!!! " + EquipoActual + " " + Area + " " + Empresa;
        Color = "#2196F3";
        Texto = "AREA CON REAPERTURA";
    } else if (Tipo == 4) {
        msg = Area + " " + Empresa + " ¡¡¡Verificar!!!!.";
    }else if ( Tipo == 5){
        msg = "¡¡¡Ojo Pestañas!!! " + EquipoActual ;
        Color = "#fe1426";
        Texto = "Pestañas";
    }

    var nodemailer = require('nodemailer');

    var transporter = nodemailer.createTransport({
        host: "mail.ceere.net", // hostname
        secureConnection: false,
        port: 465,
        tls: {
            ciphers: 'SSLv3'
        },
        auth: {
            user: 'correomineria2@ceere.net',
            pass: '1998Ceere*'
        }
    });
    var mensaje = msg;
    var mailOptions = {
        from: msg + '"Ceere" <correomineria2@ceere.net>', //Deje eso quieto Outlook porne demasiados problemas 
        to: 'jorgecalle@hotmail.com, jorgecaller@gmail.com, alexisaza@hotmail.com, camilodesarrollador@outlook.com, ceereweb@gmail.com, Soporte2ceere@gmail.com, soportee4@gmail.com, soporte.ceere06068@gmail.com',
        //to: '  Soporte2ceere@gmail.com',
        subject: 'LA AREA ES-> ' + Area,
        text: 'LA AREA ES->  ' + Area + "  " + Celda,
        html: `
            <html>
                <head>
                    <style>
                        .container {
                            font-family: Arial, sans-serif;
                            max-width: 600px;
                            margin: auto;
                            padding: 20px;
                            border: 1px solid #ddd;
                            border-radius: 5px;
                            background-color: #f9f9f9;
                        }
                        .header {
                            background-color: ${Color};
                            color: white;
                            padding: 10px;
                            text-align: center;
                            border-radius: 5px 5px 0 0;
                        }
                        .content {
                            margin: 20px 0;
                        }
                        .footer {
                            text-align: center;
                            padding: 10px;
                            font-size: 12px;
                            color: #777;
                            border-top: 1px solid #ddd;
                        }
                    </style>
                </head>
                <body>
                    <div class="container">
                        <div class="header">
                            <h3> ${Texto} </h3>
                        </div>
                        <div class="content">
                            <p><strong>Detalles:</strong></p>
                            <ul>
                                <li><strong>Empresa: </strong><br>${Empresa}</li>
                                <li><strong>Area:</strong><br>${Area}</li>
                                <li><strong>Celda:</strong><br>${Celda}</li>
                            <li><strong>Equipo Actual:</strong><br>${EquipoActual}</li>
                            </ul>
                        </div>
                        <div class="footer">
                            <p>Creado por Ceere Software - © 2024 Todos los derechos reservados</p>
                        </div>
                    </div>
                </body>
            </html>
        `
    };

    transporter.sendMail(mailOptions, function (error, info) {
        if (error) {
            return console.log(error);
        }

        console.log('Message sent: ' + info.response);
    });
}

// FUNCIÓN PARA LA CAPTURA DE PANTALLA AL MOMENTO DE LA RADICACIÓN
async function CapturaPantalla(page) {

    const FechaGeneral = new Date();

    let Dia = FechaGeneral.getDate();
    let Mes = FechaGeneral.getMonth();
    let Anio = FechaGeneral.getFullYear();
    let Hora = FechaGeneral.getHours();
    let Minuto = FechaGeneral.getMinutes();
    let Segundo = FechaGeneral.getSeconds();
    let DiaFinal, MesFinal, HoraFinal, MinutoFinal, SegundoFinal;

    Mes = Mes + 1; // PORQUE COMIENZA EN 0 Y TERMNA EN 11, POR ESTA REZÓN SE LE SUMA 1, PARA QUE QUEDE EN EL MES ACTUAL
    DiaFinal = Dia < 10 ? '0' + Dia : Dia;
    MesFinal = Mes < 10 ? '0' + Mes : Mes;
    HoraFinal = Hora < 10 ? '0' + Hora : Hora;
    MinutoFinal = Minuto < 10 ? '0' + Minuto : Minuto;
    SegundoFinal = Segundo < 10 ? '0' + Segundo : Segundo;

    let Fecha = `${DiaFinal}-${MesFinal}-${Anio} --- ${HoraFinal}-${MinutoFinal}-${SegundoFinal}`;

    const { mkdir, access } = require('fs/promises');

    let NombreCarpeta = "ScreenShots";
    let pathProduccion = `C:\\Aplicaciones\\${NombreCarpeta}`;

    try {
        // Verificar si la carpeta ya existe
        await access(pathProduccion);
        console.log(`La carpeta ${NombreCarpeta} ya existe en la dirección ${pathProduccion}`);
    } catch (error) {
        // Si no existe, crearla
        await mkdir(pathProduccion);
        console.log(`La carpeta fue creada en la dirección ${pathProduccion} con el nombre ${NombreCarpeta}`);
    }

    await page.screenshot({ path: `C:\\Aplicaciones\\ScreenShots\\Imagen Tomada El ${Fecha}.png`, type: 'png' })
    console.log("El ScreenShot fue guardado");
}


async function seleccionar_Profesional(profesionales, page, Tipo) {
    for (const profesional of profesionales) {
        const tipoProfesional = profesional.tipo;
        const nombres = profesional.nombres;
        let selectTipoProfesion;
        let addProfesional;
        // Seleccionar el tipo de profesional en el primer select
        if (Tipo == 1) {
            selectTipoProfesion = await page.$('select[id="techProfessionalDesignationId"]');
        } else {
            selectTipoProfesion = await page.$('select[id="ecoProfessionalDesignationId"]');
        }

        await selectTipoProfesion.type(tipoProfesional);

        // Iterar sobre los nombres y seleccionar cada uno en el segundo select
        for (const nombre of nombres) {
            console.log("Tipo Profesional: " + tipoProfesional + " - " + "Nombres: " + "(" + nombre + ")");
            let selectProfesional;
            if (Tipo == 1) {
                selectProfesional = await page.$('select[id="techApplicantNameId"]');
            } else {
                selectProfesional = await page.$('select[id="ecoApplicantNameId"]');
            }

            await page.waitForTimeout(300);
            await selectProfesional.type(nombre);
            // Hacer clic en el botón "Agregar"

            await page.waitForTimeout(100); // Esperar 100 milisegundos

            addProfesional = await page.$x('//span[contains(.,"Agregar")]');
            if (Tipo == 1) {
                await addProfesional[0].click();

            } else {
                try {
                    await addProfesional[0].click();
                } catch (error) {
                    console.log("ERR 0");
                    console.log (`Bro manito sabe que  pilke -> ${error}`)
                }
                try {
                    await addProfesional[1].click();
                } catch (error) {
                    console.log("ERR 1");
                    console.log (`Bro manito sabe que  pilke -> ${error}`)
                }
                try {
                    await addProfesional[2].click();

                } catch (error) {
                    console.log("ERR 2");
                    console.log (`Bro manito sabe que  pilke -> ${error}`)
                }
                try {

                    await addProfesional[3].click();
                } catch (error) {
                    console.log("ERR 3");
                    console.log (`Bro manito sabe que  pilke -> ${error}`)
                }
                try {

                    await addProfesional[4].click();
                } catch (error) {
                    console.log("ERR 4");
                    console.log (`Bro manito sabe que  pilke -> ${error}`)
                }
            }

        }
    }
}

var CorreoEnviado = false;
var PrimerCorreoEnviado = false;
// FUNCIÓN PARA VERIFICAR VENCIMIENTO DE PIN Y ENVIAR RECORDATORIO
function VerificarVencimientoPin(selectedText, TextoDeOpcionSeleccionadaEnCampoPin) {

    const input = TextoDeOpcionSeleccionadaEnCampoPin;

    // Separar la fecha después de la coma
    const dateString = input.split(',')[1].trim();

    // Crear un objeto de fecha a partir de la cadena
    const targetDate = new Date(dateString);

    // Obtener la fecha actual
    const currentDate = new Date();

    // Calcular la diferencia en milisegundos
    const diffInMs = targetDate - currentDate;

    // Convertir la diferencia en días
    const diffInDays = Math.ceil(diffInMs / (1000 * 60 * 60 * 24));

    const diaSemana = targetDate.toLocaleString('es-Es', { weekday: 'long' });
    console.log(`¡¡¡ DIFERENCIA EN DÍAS PIN: ${diffInDays}`);
    const Description = `El pin vence en ${diffInDays} días, es decir, tiene vigencia hasta el día ${diaSemana} - ${dateString}`;

    // Se captura la hora del día actual
    const HoraActual = currentDate.getHours();

    // Se captura el minuto actual
    const MinutoActual = currentDate.getMinutes();

    // Se captura el segundo actual
    const SegundoActual = currentDate.getSeconds();

    // Se verifica si la diferencia de días es igual a 5 y si la hora actual contiene 7 de la mañana ó contiene 3 de la tarde. Para hacer 2 envíos de recordatorio el día que se cumplan todas las condiciones

    // Primer envío: 07:00 am
    if ((diffInDays === 5) && ([7].includes(HoraActual)) && (MinutoActual === 0) && (CorreoEnviado === false) && !PrimerCorreoEnviado) {
        console.log("TODAS LAS CONDICIONES SE CUMPLIERON, SE ENVIARÁ EL PRIMER CORREO RECORDANDO EL VENCIMIENTO DEL PIN SELECCIONADO...");
        Correo(4, selectedText, Description);
        CorreoEnviado = true;
        PrimerCorreoEnviado = true;
    }

    // Resetear el flag solo una vez después del primer correo
    if ((diffInDays === 5) && ((HoraActual > 7) && (HoraActual < 15)) && (MinutoActual === 0) && PrimerCorreoEnviado && CorreoEnviado) {
        CorreoEnviado = false;
        console.log("LA VARIABLE DE CORREO ENVIADO SE HIZO FALSA");
    }

    // Segundo envío: 03:00 pm
    if ((diffInDays === 5) && ([15].includes(HoraActual)) && (MinutoActual === 0) && (CorreoEnviado === false)) {
        console.log("TODAS LAS CONDICIONES SE CUMPLIERON, SE ENVIARÁ EL SEGUNDO CORREO RECORDANDO EL VENCIMIENTO DEL PIN SELECCIONADO...");
        Correo(4, selectedText, Description);
        CorreoEnviado = true;
        PrimerCorreoEnviado = false;
    }
}